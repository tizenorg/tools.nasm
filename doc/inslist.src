
\S{} Special instructions...

\c DB                                        
\c DW                                        
\c DD                                        
\c DQ                                        
\c DT                                        
\c DO                                        
\c DY                                        
\c RESB             imm                      8086
\c RESW                                      
\c RESD                                      
\c RESQ                                      
\c REST                                      
\c RESO                                      
\c RESY                                      

\S{} Conventional instructions

\c AAA                                       8086,NOLONG
\c AAD                                       8086,NOLONG
\c AAD              imm                      8086,NOLONG
\c AAM                                       8086,NOLONG
\c AAM              imm                      8086,NOLONG
\c AAS                                       8086,NOLONG
\c ADC              mem,reg8                 8086
\c ADC              reg8,reg8                8086
\c ADC              mem,reg16                8086
\c ADC              reg16,reg16              8086
\c ADC              mem,reg32                386
\c ADC              reg32,reg32              386
\c ADC              mem,reg64                X64
\c ADC              reg64,reg64              X64
\c ADC              reg8,mem                 8086
\c ADC              reg8,reg8                8086
\c ADC              reg16,mem                8086
\c ADC              reg16,reg16              8086
\c ADC              reg32,mem                386
\c ADC              reg32,reg32              386
\c ADC              reg64,mem                X64
\c ADC              reg64,reg64              X64
\c ADC              rm16,imm8                8086
\c ADC              rm32,imm8                386
\c ADC              rm64,imm8                X64
\c ADC              reg_al,imm               8086
\c ADC              reg_ax,sbyte16           8086
\c ADC              reg_ax,imm               8086
\c ADC              reg_eax,sbyte32          386
\c ADC              reg_eax,imm              386
\c ADC              reg_rax,sbyte64          X64
\c ADC              reg_rax,imm              X64
\c ADC              rm8,imm                  8086
\c ADC              rm16,imm                 8086
\c ADC              rm32,imm                 386
\c ADC              rm64,imm                 X64
\c ADC              mem,imm8                 8086
\c ADC              mem,imm16                8086
\c ADC              mem,imm32                386
\c ADD              mem,reg8                 8086
\c ADD              reg8,reg8                8086
\c ADD              mem,reg16                8086
\c ADD              reg16,reg16              8086
\c ADD              mem,reg32                386
\c ADD              reg32,reg32              386
\c ADD              mem,reg64                X64
\c ADD              reg64,reg64              X64
\c ADD              reg8,mem                 8086
\c ADD              reg8,reg8                8086
\c ADD              reg16,mem                8086
\c ADD              reg16,reg16              8086
\c ADD              reg32,mem                386
\c ADD              reg32,reg32              386
\c ADD              reg64,mem                X64
\c ADD              reg64,reg64              X64
\c ADD              rm16,imm8                8086
\c ADD              rm32,imm8                386
\c ADD              rm64,imm8                X64
\c ADD              reg_al,imm               8086
\c ADD              reg_ax,sbyte16           8086
\c ADD              reg_ax,imm               8086
\c ADD              reg_eax,sbyte32          386
\c ADD              reg_eax,imm              386
\c ADD              reg_rax,sbyte64          X64
\c ADD              reg_rax,imm              X64
\c ADD              rm8,imm                  8086
\c ADD              rm16,imm                 8086
\c ADD              rm32,imm                 386
\c ADD              rm64,imm                 X64
\c ADD              mem,imm8                 8086
\c ADD              mem,imm16                8086
\c ADD              mem,imm32                386
\c AND              mem,reg8                 8086
\c AND              reg8,reg8                8086
\c AND              mem,reg16                8086
\c AND              reg16,reg16              8086
\c AND              mem,reg32                386
\c AND              reg32,reg32              386
\c AND              mem,reg64                X64
\c AND              reg64,reg64              X64
\c AND              reg8,mem                 8086
\c AND              reg8,reg8                8086
\c AND              reg16,mem                8086
\c AND              reg16,reg16              8086
\c AND              reg32,mem                386
\c AND              reg32,reg32              386
\c AND              reg64,mem                X64
\c AND              reg64,reg64              X64
\c AND              rm16,imm8                8086
\c AND              rm32,imm8                386
\c AND              rm64,imm8                X64
\c AND              reg_al,imm               8086
\c AND              reg_ax,sbyte16           8086
\c AND              reg_ax,imm               8086
\c AND              reg_eax,sbyte32          386
\c AND              reg_eax,imm              386
\c AND              reg_rax,sbyte64          X64
\c AND              reg_rax,imm              X64
\c AND              rm8,imm                  8086
\c AND              rm16,imm                 8086
\c AND              rm32,imm                 386
\c AND              rm64,imm                 X64
\c AND              mem,imm8                 8086
\c AND              mem,imm16                8086
\c AND              mem,imm32                386
\c ARPL             mem,reg16                286,PROT,NOLONG
\c ARPL             reg16,reg16              286,PROT,NOLONG
\c BB0_RESET                                 PENT,CYRIX,ND
\c BB1_RESET                                 PENT,CYRIX,ND
\c BOUND            reg16,mem                186,NOLONG
\c BOUND            reg32,mem                386,NOLONG
\c BSF              reg16,mem                386
\c BSF              reg16,reg16              386
\c BSF              reg32,mem                386
\c BSF              reg32,reg32              386
\c BSF              reg64,mem                X64
\c BSF              reg64,reg64              X64
\c BSR              reg16,mem                386
\c BSR              reg16,reg16              386
\c BSR              reg32,mem                386
\c BSR              reg32,reg32              386
\c BSR              reg64,mem                X64
\c BSR              reg64,reg64              X64
\c BSWAP            reg32                    486
\c BSWAP            reg64                    X64
\c BT               mem,reg16                386
\c BT               reg16,reg16              386
\c BT               mem,reg32                386
\c BT               reg32,reg32              386
\c BT               mem,reg64                X64
\c BT               reg64,reg64              X64
\c BT               rm16,imm                 386
\c BT               rm32,imm                 386
\c BT               rm64,imm                 X64
\c BTC              mem,reg16                386
\c BTC              reg16,reg16              386
\c BTC              mem,reg32                386
\c BTC              reg32,reg32              386
\c BTC              mem,reg64                X64
\c BTC              reg64,reg64              X64
\c BTC              rm16,imm                 386
\c BTC              rm32,imm                 386
\c BTC              rm64,imm                 X64
\c BTR              mem,reg16                386
\c BTR              reg16,reg16              386
\c BTR              mem,reg32                386
\c BTR              reg32,reg32              386
\c BTR              mem,reg64                X64
\c BTR              reg64,reg64              X64
\c BTR              rm16,imm                 386
\c BTR              rm32,imm                 386
\c BTR              rm64,imm                 X64
\c BTS              mem,reg16                386
\c BTS              reg16,reg16              386
\c BTS              mem,reg32                386
\c BTS              reg32,reg32              386
\c BTS              mem,reg64                X64
\c BTS              reg64,reg64              X64
\c BTS              rm16,imm                 386
\c BTS              rm32,imm                 386
\c BTS              rm64,imm                 X64
\c CALL             imm                      8086
\c CALL             imm|near                 8086
\c CALL             imm|far                  8086,ND,NOLONG
\c CALL             imm16                    8086
\c CALL             imm16|near               8086
\c CALL             imm16|far                8086,ND,NOLONG
\c CALL             imm32                    386
\c CALL             imm32|near               386
\c CALL             imm32|far                386,ND,NOLONG
\c CALL             imm:imm                  8086,NOLONG
\c CALL             imm16:imm                8086,NOLONG
\c CALL             imm:imm16                8086,NOLONG
\c CALL             imm32:imm                386,NOLONG
\c CALL             imm:imm32                386,NOLONG
\c CALL             mem|far                  8086,NOLONG
\c CALL             mem|far                  X64
\c CALL             mem16|far                8086
\c CALL             mem32|far                386
\c CALL             mem64|far                X64
\c CALL             mem|near                 8086
\c CALL             mem16|near               8086
\c CALL             mem32|near               386,NOLONG
\c CALL             mem64|near               X64
\c CALL             reg16                    8086
\c CALL             reg32                    386,NOLONG
\c CALL             reg64                    X64
\c CALL             mem                      8086
\c CALL             mem16                    8086
\c CALL             mem32                    386,NOLONG
\c CALL             mem64                    X64
\c CBW                                       8086
\c CDQ                                       386
\c CDQE                                      X64
\c CLC                                       8086
\c CLD                                       8086
\c CLGI                                      X64,AMD
\c CLI                                       8086
\c CLTS                                      286,PRIV
\c CMC                                       8086
\c CMP              mem,reg8                 8086
\c CMP              reg8,reg8                8086
\c CMP              mem,reg16                8086
\c CMP              reg16,reg16              8086
\c CMP              mem,reg32                386
\c CMP              reg32,reg32              386
\c CMP              mem,reg64                X64
\c CMP              reg64,reg64              X64
\c CMP              reg8,mem                 8086
\c CMP              reg8,reg8                8086
\c CMP              reg16,mem                8086
\c CMP              reg16,reg16              8086
\c CMP              reg32,mem                386
\c CMP              reg32,reg32              386
\c CMP              reg64,mem                X64
\c CMP              reg64,reg64              X64
\c CMP              rm16,imm8                8086
\c CMP              rm32,imm8                386
\c CMP              rm64,imm8                X64
\c CMP              reg_al,imm               8086
\c CMP              reg_ax,sbyte16           8086
\c CMP              reg_ax,imm               8086
\c CMP              reg_eax,sbyte32          386
\c CMP              reg_eax,imm              386
\c CMP              reg_rax,sbyte64          X64
\c CMP              reg_rax,imm              X64
\c CMP              rm8,imm                  8086
\c CMP              rm16,imm                 8086
\c CMP              rm32,imm                 386
\c CMP              rm64,imm                 X64
\c CMP              mem,imm8                 8086
\c CMP              mem,imm16                8086
\c CMP              mem,imm32                386
\c CMPSB                                     8086
\c CMPSD                                     386
\c CMPSQ                                     X64
\c CMPSW                                     8086
\c CMPXCHG          mem,reg8                 PENT
\c CMPXCHG          reg8,reg8                PENT
\c CMPXCHG          mem,reg16                PENT
\c CMPXCHG          reg16,reg16              PENT
\c CMPXCHG          mem,reg32                PENT
\c CMPXCHG          reg32,reg32              PENT
\c CMPXCHG          mem,reg64                X64
\c CMPXCHG          reg64,reg64              X64
\c CMPXCHG486       mem,reg8                 486,UNDOC,ND
\c CMPXCHG486       reg8,reg8                486,UNDOC,ND
\c CMPXCHG486       mem,reg16                486,UNDOC,ND
\c CMPXCHG486       reg16,reg16              486,UNDOC,ND
\c CMPXCHG486       mem,reg32                486,UNDOC,ND
\c CMPXCHG486       reg32,reg32              486,UNDOC,ND
\c CMPXCHG8B        mem                      PENT
\c CMPXCHG16B       mem                      X64
\c CPUID                                     PENT
\c CPU_READ                                  PENT,CYRIX
\c CPU_WRITE                                 PENT,CYRIX
\c CQO                                       X64
\c CWD                                       8086
\c CWDE                                      386
\c DAA                                       8086,NOLONG
\c DAS                                       8086,NOLONG
\c DEC              reg16                    8086,NOLONG
\c DEC              reg32                    386,NOLONG
\c DEC              rm8                      8086
\c DEC              rm16                     8086
\c DEC              rm32                     386
\c DEC              rm64                     X64
\c DIV              rm8                      8086
\c DIV              rm16                     8086
\c DIV              rm32                     386
\c DIV              rm64                     X64
\c DMINT                                     P6,CYRIX
\c EMMS                                      PENT,MMX
\c ENTER            imm,imm                  186
\c EQU              imm                      8086
\c EQU              imm:imm                  8086
\c F2XM1                                     8086,FPU
\c FABS                                      8086,FPU
\c FADD             mem32                    8086,FPU
\c FADD             mem64                    8086,FPU
\c FADD             fpureg|to                8086,FPU
\c FADD             fpureg                   8086,FPU
\c FADD             fpureg,fpu0              8086,FPU
\c FADD             fpu0,fpureg              8086,FPU
\c FADD                                      8086,FPU,ND
\c FADDP            fpureg                   8086,FPU
\c FADDP            fpureg,fpu0              8086,FPU
\c FADDP                                     8086,FPU,ND
\c FBLD             mem80                    8086,FPU
\c FBLD             mem                      8086,FPU
\c FBSTP            mem80                    8086,FPU
\c FBSTP            mem                      8086,FPU
\c FCHS                                      8086,FPU
\c FCLEX                                     8086,FPU
\c FCMOVB           fpureg                   P6,FPU
\c FCMOVB           fpu0,fpureg              P6,FPU
\c FCMOVB                                    P6,FPU,ND
\c FCMOVBE          fpureg                   P6,FPU
\c FCMOVBE          fpu0,fpureg              P6,FPU
\c FCMOVBE                                   P6,FPU,ND
\c FCMOVE           fpureg                   P6,FPU
\c FCMOVE           fpu0,fpureg              P6,FPU
\c FCMOVE                                    P6,FPU,ND
\c FCMOVNB          fpureg                   P6,FPU
\c FCMOVNB          fpu0,fpureg              P6,FPU
\c FCMOVNB                                   P6,FPU,ND
\c FCMOVNBE         fpureg                   P6,FPU
\c FCMOVNBE         fpu0,fpureg              P6,FPU
\c FCMOVNBE                                  P6,FPU,ND
\c FCMOVNE          fpureg                   P6,FPU
\c FCMOVNE          fpu0,fpureg              P6,FPU
\c FCMOVNE                                   P6,FPU,ND
\c FCMOVNU          fpureg                   P6,FPU
\c FCMOVNU          fpu0,fpureg              P6,FPU
\c FCMOVNU                                   P6,FPU,ND
\c FCMOVU           fpureg                   P6,FPU
\c FCMOVU           fpu0,fpureg              P6,FPU
\c FCMOVU                                    P6,FPU,ND
\c FCOM             mem32                    8086,FPU
\c FCOM             mem64                    8086,FPU
\c FCOM             fpureg                   8086,FPU
\c FCOM             fpu0,fpureg              8086,FPU
\c FCOM                                      8086,FPU,ND
\c FCOMI            fpureg                   P6,FPU
\c FCOMI            fpu0,fpureg              P6,FPU
\c FCOMI                                     P6,FPU,ND
\c FCOMIP           fpureg                   P6,FPU
\c FCOMIP           fpu0,fpureg              P6,FPU
\c FCOMIP                                    P6,FPU,ND
\c FCOMP            mem32                    8086,FPU
\c FCOMP            mem64                    8086,FPU
\c FCOMP            fpureg                   8086,FPU
\c FCOMP            fpu0,fpureg              8086,FPU
\c FCOMP                                     8086,FPU,ND
\c FCOMPP                                    8086,FPU
\c FCOS                                      386,FPU
\c FDECSTP                                   8086,FPU
\c FDISI                                     8086,FPU
\c FDIV             mem32                    8086,FPU
\c FDIV             mem64                    8086,FPU
\c FDIV             fpureg|to                8086,FPU
\c FDIV             fpureg                   8086,FPU
\c FDIV             fpureg,fpu0              8086,FPU
\c FDIV             fpu0,fpureg              8086,FPU
\c FDIV                                      8086,FPU,ND
\c FDIVP            fpureg                   8086,FPU
\c FDIVP            fpureg,fpu0              8086,FPU
\c FDIVP                                     8086,FPU,ND
\c FDIVR            mem32                    8086,FPU
\c FDIVR            mem64                    8086,FPU
\c FDIVR            fpureg|to                8086,FPU
\c FDIVR            fpureg,fpu0              8086,FPU
\c FDIVR            fpureg                   8086,FPU
\c FDIVR            fpu0,fpureg              8086,FPU
\c FDIVR                                     8086,FPU,ND
\c FDIVRP           fpureg                   8086,FPU
\c FDIVRP           fpureg,fpu0              8086,FPU
\c FDIVRP                                    8086,FPU,ND
\c FEMMS                                     PENT,3DNOW
\c FENI                                      8086,FPU
\c FFREE            fpureg                   8086,FPU
\c FFREE                                     8086,FPU
\c FFREEP           fpureg                   286,FPU,UNDOC
\c FFREEP                                    286,FPU,UNDOC
\c FIADD            mem32                    8086,FPU
\c FIADD            mem16                    8086,FPU
\c FICOM            mem32                    8086,FPU
\c FICOM            mem16                    8086,FPU
\c FICOMP           mem32                    8086,FPU
\c FICOMP           mem16                    8086,FPU
\c FIDIV            mem32                    8086,FPU
\c FIDIV            mem16                    8086,FPU
\c FIDIVR           mem32                    8086,FPU
\c FIDIVR           mem16                    8086,FPU
\c FILD             mem32                    8086,FPU
\c FILD             mem16                    8086,FPU
\c FILD             mem64                    8086,FPU
\c FIMUL            mem32                    8086,FPU
\c FIMUL            mem16                    8086,FPU
\c FINCSTP                                   8086,FPU
\c FINIT                                     8086,FPU
\c FIST             mem32                    8086,FPU
\c FIST             mem16                    8086,FPU
\c FISTP            mem32                    8086,FPU
\c FISTP            mem16                    8086,FPU
\c FISTP            mem64                    8086,FPU
\c FISTTP           mem16                    PRESCOTT,FPU
\c FISTTP           mem32                    PRESCOTT,FPU
\c FISTTP           mem64                    PRESCOTT,FPU
\c FISUB            mem32                    8086,FPU
\c FISUB            mem16                    8086,FPU
\c FISUBR           mem32                    8086,FPU
\c FISUBR           mem16                    8086,FPU
\c FLD              mem32                    8086,FPU
\c FLD              mem64                    8086,FPU
\c FLD              mem80                    8086,FPU
\c FLD              fpureg                   8086,FPU
\c FLD                                       8086,FPU,ND
\c FLD1                                      8086,FPU
\c FLDCW            mem                      8086,FPU,SW
\c FLDENV           mem                      8086,FPU
\c FLDL2E                                    8086,FPU
\c FLDL2T                                    8086,FPU
\c FLDLG2                                    8086,FPU
\c FLDLN2                                    8086,FPU
\c FLDPI                                     8086,FPU
\c FLDZ                                      8086,FPU
\c FMUL             mem32                    8086,FPU
\c FMUL             mem64                    8086,FPU
\c FMUL             fpureg|to                8086,FPU
\c FMUL             fpureg,fpu0              8086,FPU
\c FMUL             fpureg                   8086,FPU
\c FMUL             fpu0,fpureg              8086,FPU
\c FMUL                                      8086,FPU,ND
\c FMULP            fpureg                   8086,FPU
\c FMULP            fpureg,fpu0              8086,FPU
\c FMULP                                     8086,FPU,ND
\c FNCLEX                                    8086,FPU
\c FNDISI                                    8086,FPU
\c FNENI                                     8086,FPU
\c FNINIT                                    8086,FPU
\c FNOP                                      8086,FPU
\c FNSAVE           mem                      8086,FPU
\c FNSTCW           mem                      8086,FPU,SW
\c FNSTENV          mem                      8086,FPU
\c FNSTSW           mem                      8086,FPU,SW
\c FNSTSW           reg_ax                   286,FPU
\c FPATAN                                    8086,FPU
\c FPREM                                     8086,FPU
\c FPREM1                                    386,FPU
\c FPTAN                                     8086,FPU
\c FRNDINT                                   8086,FPU
\c FRSTOR           mem                      8086,FPU
\c FSAVE            mem                      8086,FPU
\c FSCALE                                    8086,FPU
\c FSETPM                                    286,FPU
\c FSIN                                      386,FPU
\c FSINCOS                                   386,FPU
\c FSQRT                                     8086,FPU
\c FST              mem32                    8086,FPU
\c FST              mem64                    8086,FPU
\c FST              fpureg                   8086,FPU
\c FST                                       8086,FPU,ND
\c FSTCW            mem                      8086,FPU,SW
\c FSTENV           mem                      8086,FPU
\c FSTP             mem32                    8086,FPU
\c FSTP             mem64                    8086,FPU
\c FSTP             mem80                    8086,FPU
\c FSTP             fpureg                   8086,FPU
\c FSTP                                      8086,FPU,ND
\c FSTSW            mem                      8086,FPU,SW
\c FSTSW            reg_ax                   286,FPU
\c FSUB             mem32                    8086,FPU
\c FSUB             mem64                    8086,FPU
\c FSUB             fpureg|to                8086,FPU
\c FSUB             fpureg,fpu0              8086,FPU
\c FSUB             fpureg                   8086,FPU
\c FSUB             fpu0,fpureg              8086,FPU
\c FSUB                                      8086,FPU,ND
\c FSUBP            fpureg                   8086,FPU
\c FSUBP            fpureg,fpu0              8086,FPU
\c FSUBP                                     8086,FPU,ND
\c FSUBR            mem32                    8086,FPU
\c FSUBR            mem64                    8086,FPU
\c FSUBR            fpureg|to                8086,FPU
\c FSUBR            fpureg,fpu0              8086,FPU
\c FSUBR            fpureg                   8086,FPU
\c FSUBR            fpu0,fpureg              8086,FPU
\c FSUBR                                     8086,FPU,ND
\c FSUBRP           fpureg                   8086,FPU
\c FSUBRP           fpureg,fpu0              8086,FPU
\c FSUBRP                                    8086,FPU,ND
\c FTST                                      8086,FPU
\c FUCOM            fpureg                   386,FPU
\c FUCOM            fpu0,fpureg              386,FPU
\c FUCOM                                     386,FPU,ND
\c FUCOMI           fpureg                   P6,FPU
\c FUCOMI           fpu0,fpureg              P6,FPU
\c FUCOMI                                    P6,FPU,ND
\c FUCOMIP          fpureg                   P6,FPU
\c FUCOMIP          fpu0,fpureg              P6,FPU
\c FUCOMIP                                   P6,FPU,ND
\c FUCOMP           fpureg                   386,FPU
\c FUCOMP           fpu0,fpureg              386,FPU
\c FUCOMP                                    386,FPU,ND
\c FUCOMPP                                   386,FPU
\c FXAM                                      8086,FPU
\c FXCH             fpureg                   8086,FPU
\c FXCH             fpureg,fpu0              8086,FPU
\c FXCH             fpu0,fpureg              8086,FPU
\c FXCH                                      8086,FPU,ND
\c FXTRACT                                   8086,FPU
\c FYL2X                                     8086,FPU
\c FYL2XP1                                   8086,FPU
\c HLT                                       8086,PRIV
\c IBTS             mem,reg16                386,SW,UNDOC,ND
\c IBTS             reg16,reg16              386,UNDOC,ND
\c IBTS             mem,reg32                386,SD,UNDOC,ND
\c IBTS             reg32,reg32              386,UNDOC,ND
\c ICEBP                                     386,ND
\c IDIV             rm8                      8086
\c IDIV             rm16                     8086
\c IDIV             rm32                     386
\c IDIV             rm64                     X64
\c IMUL             rm8                      8086
\c IMUL             rm16                     8086
\c IMUL             rm32                     386
\c IMUL             rm64                     X64
\c IMUL             reg16,mem                386
\c IMUL             reg16,reg16              386
\c IMUL             reg32,mem                386
\c IMUL             reg32,reg32              386
\c IMUL             reg64,mem                X64
\c IMUL             reg64,reg64              X64
\c IMUL             reg16,mem,imm8           186
\c IMUL             reg16,mem,sbyte16        186,ND
\c IMUL             reg16,mem,imm16          186
\c IMUL             reg16,mem,imm            186,ND
\c IMUL             reg16,reg16,imm8         186
\c IMUL             reg16,reg16,sbyte16      186,ND
\c IMUL             reg16,reg16,imm16        186
\c IMUL             reg16,reg16,imm          186,ND
\c IMUL             reg32,mem,imm8           386
\c IMUL             reg32,mem,sbyte32        386,ND
\c IMUL             reg32,mem,imm32          386
\c IMUL             reg32,mem,imm            386,ND
\c IMUL             reg32,reg32,imm8         386
\c IMUL             reg32,reg32,sbyte32      386,ND
\c IMUL             reg32,reg32,imm32        386
\c IMUL             reg32,reg32,imm          386,ND
\c IMUL             reg64,mem,imm8           X64
\c IMUL             reg64,mem,sbyte64        X64,ND
\c IMUL             reg64,mem,imm32          X64
\c IMUL             reg64,mem,imm            X64,ND
\c IMUL             reg64,reg64,imm8         X64
\c IMUL             reg64,reg64,sbyte64      X64,ND
\c IMUL             reg64,reg64,imm32        X64
\c IMUL             reg64,reg64,imm          X64,ND
\c IMUL             reg16,imm8               186
\c IMUL             reg16,sbyte16            186,ND
\c IMUL             reg16,imm16              186
\c IMUL             reg16,imm                186,ND
\c IMUL             reg32,imm8               386
\c IMUL             reg32,sbyte32            386,ND
\c IMUL             reg32,imm32              386
\c IMUL             reg32,imm                386,ND
\c IMUL             reg64,imm8               X64
\c IMUL             reg64,sbyte64            X64,ND
\c IMUL             reg64,imm32              X64
\c IMUL             reg64,imm                X64,ND
\c IN               reg_al,imm               8086
\c IN               reg_ax,imm               8086
\c IN               reg_eax,imm              386
\c IN               reg_al,reg_dx            8086
\c IN               reg_ax,reg_dx            8086
\c IN               reg_eax,reg_dx           386
\c INC              reg16                    8086,NOLONG
\c INC              reg32                    386,NOLONG
\c INC              rm8                      8086
\c INC              rm16                     8086
\c INC              rm32                     386
\c INC              rm64                     X64
\c INCBIN                                    
\c INSB                                      186
\c INSD                                      386
\c INSW                                      186
\c INT              imm                      8086
\c INT01                                     386,ND
\c INT1                                      386
\c INT03                                     8086,ND
\c INT3                                      8086
\c INTO                                      8086,NOLONG
\c INVD                                      486,PRIV
\c INVLPG           mem                      486,PRIV
\c INVLPGA          reg_ax,reg_ecx           X86_64,AMD,NOLONG
\c INVLPGA          reg_eax,reg_ecx          X86_64,AMD
\c INVLPGA          reg_rax,reg_ecx          X64,AMD
\c INVLPGA                                   X86_64,AMD
\c IRET                                      8086
\c IRETD                                     386
\c IRETQ                                     X64
\c IRETW                                     8086
\c JCXZ             imm                      8086,NOLONG
\c JECXZ            imm                      386
\c JRCXZ            imm                      X64
\c JMP              imm|short                8086
\c JMP              imm                      8086,ND
\c JMP              imm                      8086
\c JMP              imm|near                 8086,ND
\c JMP              imm|far                  8086,ND,NOLONG
\c JMP              imm16                    8086
\c JMP              imm16|near               8086,ND
\c JMP              imm16|far                8086,ND,NOLONG
\c JMP              imm32                    386
\c JMP              imm32|near               386,ND
\c JMP              imm32|far                386,ND,NOLONG
\c JMP              imm:imm                  8086,NOLONG
\c JMP              imm16:imm                8086,NOLONG
\c JMP              imm:imm16                8086,NOLONG
\c JMP              imm32:imm                386,NOLONG
\c JMP              imm:imm32                386,NOLONG
\c JMP              mem|far                  8086,NOLONG
\c JMP              mem|far                  X64
\c JMP              mem16|far                8086
\c JMP              mem32|far                386
\c JMP              mem64|far                X64
\c JMP              mem|near                 8086
\c JMP              mem16|near               8086
\c JMP              mem32|near               386,NOLONG
\c JMP              mem64|near               X64
\c JMP              reg16                    8086
\c JMP              reg32                    386,NOLONG
\c JMP              reg64                    X64
\c JMP              mem                      8086
\c JMP              mem16                    8086
\c JMP              mem32                    386,NOLONG
\c JMP              mem64                    X64
\c JMPE             imm                      IA64
\c JMPE             imm16                    IA64
\c JMPE             imm32                    IA64
\c JMPE             rm16                     IA64
\c JMPE             rm32                     IA64
\c LAHF                                      8086
\c LAR              reg16,mem                286,PROT,SW
\c LAR              reg16,reg16              286,PROT
\c LAR              reg16,reg32              386,PROT
\c LAR              reg16,reg64              X64,PROT,ND
\c LAR              reg32,mem                386,PROT,SW
\c LAR              reg32,reg16              386,PROT
\c LAR              reg32,reg32              386,PROT
\c LAR              reg32,reg64              X64,PROT,ND
\c LAR              reg64,mem                X64,PROT,SW
\c LAR              reg64,reg16              X64,PROT
\c LAR              reg64,reg32              X64,PROT
\c LAR              reg64,reg64              X64,PROT
\c LDS              reg16,mem                8086,NOLONG
\c LDS              reg32,mem                386,NOLONG
\c LEA              reg16,mem                8086
\c LEA              reg32,mem                386
\c LEA              reg64,mem                X64
\c LEAVE                                     186
\c LES              reg16,mem                8086,NOLONG
\c LES              reg32,mem                386,NOLONG
\c LFENCE                                    X64,AMD
\c LFS              reg16,mem                386
\c LFS              reg32,mem                386
\c LGDT             mem                      286,PRIV
\c LGS              reg16,mem                386
\c LGS              reg32,mem                386
\c LIDT             mem                      286,PRIV
\c LLDT             mem                      286,PROT,PRIV
\c LLDT             mem16                    286,PROT,PRIV
\c LLDT             reg16                    286,PROT,PRIV
\c LMSW             mem                      286,PRIV
\c LMSW             mem16                    286,PRIV
\c LMSW             reg16                    286,PRIV
\c LOADALL                                   386,UNDOC
\c LOADALL286                                286,UNDOC
\c LODSB                                     8086
\c LODSD                                     386
\c LODSQ                                     X64
\c LODSW                                     8086
\c LOOP             imm                      8086
\c LOOP             imm,reg_cx               8086,NOLONG
\c LOOP             imm,reg_ecx              386
\c LOOP             imm,reg_rcx              X64
\c LOOPE            imm                      8086
\c LOOPE            imm,reg_cx               8086,NOLONG
\c LOOPE            imm,reg_ecx              386
\c LOOPE            imm,reg_rcx              X64
\c LOOPNE           imm                      8086
\c LOOPNE           imm,reg_cx               8086,NOLONG
\c LOOPNE           imm,reg_ecx              386
\c LOOPNE           imm,reg_rcx              X64
\c LOOPNZ           imm                      8086
\c LOOPNZ           imm,reg_cx               8086,NOLONG
\c LOOPNZ           imm,reg_ecx              386
\c LOOPNZ           imm,reg_rcx              X64
\c LOOPZ            imm                      8086
\c LOOPZ            imm,reg_cx               8086,NOLONG
\c LOOPZ            imm,reg_ecx              386
\c LOOPZ            imm,reg_rcx              X64
\c LSL              reg16,mem                286,PROT,SW
\c LSL              reg16,reg16              286,PROT
\c LSL              reg16,reg32              386,PROT
\c LSL              reg16,reg64              X64,PROT,ND
\c LSL              reg32,mem                386,PROT,SW
\c LSL              reg32,reg16              386,PROT
\c LSL              reg32,reg32              386,PROT
\c LSL              reg32,reg64              X64,PROT,ND
\c LSL              reg64,mem                X64,PROT,SW
\c LSL              reg64,reg16              X64,PROT
\c LSL              reg64,reg32              X64,PROT
\c LSL              reg64,reg64              X64,PROT
\c LSS              reg16,mem                386
\c LSS              reg32,mem                386
\c LTR              mem                      286,PROT,PRIV
\c LTR              mem16                    286,PROT,PRIV
\c LTR              reg16                    286,PROT,PRIV
\c MFENCE                                    X64,AMD
\c MONITOR                                   PRESCOTT
\c MONITOR          reg_eax,reg_ecx,reg_edx  PRESCOTT,ND
\c MONITOR          reg_rax,reg_ecx,reg_edx  X64,ND
\c MOV              mem,reg_sreg             8086
\c MOV              reg16,reg_sreg           8086
\c MOV              reg32,reg_sreg           386
\c MOV              reg_sreg,mem             8086
\c MOV              reg_sreg,reg16           8086
\c MOV              reg_sreg,reg32           386
\c MOV              reg_al,mem_offs          8086
\c MOV              reg_ax,mem_offs          8086
\c MOV              reg_eax,mem_offs         386
\c MOV              reg_rax,mem_offs         X64
\c MOV              mem_offs,reg_al          8086
\c MOV              mem_offs,reg_ax          8086
\c MOV              mem_offs,reg_eax         386
\c MOV              mem_offs,reg_rax         X64
\c MOV              reg32,reg_creg           386,PRIV,NOLONG
\c MOV              reg64,reg_creg           X64,PRIV
\c MOV              reg_creg,reg32           386,PRIV,NOLONG
\c MOV              reg_creg,reg64           X64,PRIV
\c MOV              reg32,reg_dreg           386,PRIV,NOLONG
\c MOV              reg64,reg_dreg           X64,PRIV
\c MOV              reg_dreg,reg32           386,PRIV,NOLONG
\c MOV              reg_dreg,reg64           X64,PRIV
\c MOV              reg32,reg_treg           386,NOLONG,ND
\c MOV              reg_treg,reg32           386,NOLONG,ND
\c MOV              mem,reg8                 8086
\c MOV              reg8,reg8                8086
\c MOV              mem,reg16                8086
\c MOV              reg16,reg16              8086
\c MOV              mem,reg32                386
\c MOV              reg32,reg32              386
\c MOV              mem,reg64                X64
\c MOV              reg64,reg64              X64
\c MOV              reg8,mem                 8086
\c MOV              reg8,reg8                8086
\c MOV              reg16,mem                8086
\c MOV              reg16,reg16              8086
\c MOV              reg32,mem                386
\c MOV              reg32,reg32              386
\c MOV              reg64,mem                X64
\c MOV              reg64,reg64              X64
\c MOV              reg8,imm                 8086
\c MOV              reg16,imm                8086
\c MOV              reg32,imm                386
\c MOV              reg64,imm                X64
\c MOV              reg64,imm32              X64
\c MOV              rm8,imm                  8086
\c MOV              rm16,imm                 8086
\c MOV              rm32,imm                 386
\c MOV              rm64,imm                 X64
\c MOV              mem,imm8                 8086
\c MOV              mem,imm16                8086
\c MOV              mem,imm32                386
\c MOVD             mmxreg,mem               PENT,MMX,SD
\c MOVD             mmxreg,reg32             PENT,MMX
\c MOVD             mem,mmxreg               PENT,MMX,SD
\c MOVD             reg32,mmxreg             PENT,MMX
\c MOVD             xmmreg,mem               X64,SD
\c MOVD             xmmreg,reg32             X64
\c MOVD             mem,xmmreg               X64,SD
\c MOVD             reg32,xmmreg             X64,SSE
\c MOVQ             mmxreg,mmxrm             PENT,MMX
\c MOVQ             mmxrm,mmxreg             PENT,MMX
\c MOVQ             mmxreg,rm64              X64,MMX
\c MOVQ             rm64,mmxreg              X64,MMX
\c MOVSB                                     8086
\c MOVSD                                     386
\c MOVSQ                                     X64
\c MOVSW                                     8086
\c MOVSX            reg16,mem                386
\c MOVSX            reg16,reg8               386
\c MOVSX            reg32,rm8                386
\c MOVSX            reg32,rm16               386
\c MOVSX            reg64,rm8                X64
\c MOVSX            reg64,rm16               X64
\c MOVSXD           reg64,rm32               X64
\c MOVSX            reg64,rm32               X64,ND
\c MOVZX            reg16,mem                386
\c MOVZX            reg16,reg8               386
\c MOVZX            reg32,rm8                386
\c MOVZX            reg32,rm16               386
\c MOVZX            reg64,rm8                X64
\c MOVZX            reg64,rm16               X64
\c MUL              rm8                      8086
\c MUL              rm16                     8086
\c MUL              rm32                     386
\c MUL              rm64                     X64
\c MWAIT                                     PRESCOTT
\c MWAIT            reg_eax,reg_ecx          PRESCOTT,ND
\c NEG              rm8                      8086
\c NEG              rm16                     8086
\c NEG              rm32                     386
\c NEG              rm64                     X64
\c NOP                                       8086
\c NOP              rm16                     P6
\c NOP              rm32                     P6
\c NOP              rm64                     X64
\c NOT              rm8                      8086
\c NOT              rm16                     8086
\c NOT              rm32                     386
\c NOT              rm64                     X64
\c OR               mem,reg8                 8086
\c OR               reg8,reg8                8086
\c OR               mem,reg16                8086
\c OR               reg16,reg16              8086
\c OR               mem,reg32                386
\c OR               reg32,reg32              386
\c OR               mem,reg64                X64
\c OR               reg64,reg64              X64
\c OR               reg8,mem                 8086
\c OR               reg8,reg8                8086
\c OR               reg16,mem                8086
\c OR               reg16,reg16              8086
\c OR               reg32,mem                386
\c OR               reg32,reg32              386
\c OR               reg64,mem                X64
\c OR               reg64,reg64              X64
\c OR               rm16,imm8                8086
\c OR               rm32,imm8                386
\c OR               rm64,imm8                X64
\c OR               reg_al,imm               8086
\c OR               reg_ax,sbyte16           8086
\c OR               reg_ax,imm               8086
\c OR               reg_eax,sbyte32          386
\c OR               reg_eax,imm              386
\c OR               reg_rax,sbyte64          X64
\c OR               reg_rax,imm              X64
\c OR               rm8,imm                  8086
\c OR               rm16,imm                 8086
\c OR               rm32,imm                 386
\c OR               rm64,imm                 X64
\c OR               mem,imm8                 8086
\c OR               mem,imm16                8086
\c OR               mem,imm32                386
\c OUT              imm,reg_al               8086
\c OUT              imm,reg_ax               8086
\c OUT              imm,reg_eax              386
\c OUT              reg_dx,reg_al            8086
\c OUT              reg_dx,reg_ax            8086
\c OUT              reg_dx,reg_eax           386
\c OUTSB                                     186
\c OUTSD                                     386
\c OUTSW                                     186
\c PACKSSDW         mmxreg,mmxrm             PENT,MMX
\c PACKSSWB         mmxreg,mmxrm             PENT,MMX
\c PACKUSWB         mmxreg,mmxrm             PENT,MMX
\c PADDB            mmxreg,mmxrm             PENT,MMX
\c PADDD            mmxreg,mmxrm             PENT,MMX
\c PADDSB           mmxreg,mmxrm             PENT,MMX
\c PADDSIW          mmxreg,mmxrm             PENT,MMX,CYRIX
\c PADDSW           mmxreg,mmxrm             PENT,MMX
\c PADDUSB          mmxreg,mmxrm             PENT,MMX
\c PADDUSW          mmxreg,mmxrm             PENT,MMX
\c PADDW            mmxreg,mmxrm             PENT,MMX
\c PAND             mmxreg,mmxrm             PENT,MMX
\c PANDN            mmxreg,mmxrm             PENT,MMX
\c PAUSE                                     8086
\c PAVEB            mmxreg,mmxrm             PENT,MMX,CYRIX
\c PAVGUSB          mmxreg,mmxrm             PENT,3DNOW
\c PCMPEQB          mmxreg,mmxrm             PENT,MMX
\c PCMPEQD          mmxreg,mmxrm             PENT,MMX
\c PCMPEQW          mmxreg,mmxrm             PENT,MMX
\c PCMPGTB          mmxreg,mmxrm             PENT,MMX
\c PCMPGTD          mmxreg,mmxrm             PENT,MMX
\c PCMPGTW          mmxreg,mmxrm             PENT,MMX
\c PDISTIB          mmxreg,mem               PENT,MMX,CYRIX
\c PF2ID            mmxreg,mmxrm             PENT,3DNOW
\c PFACC            mmxreg,mmxrm             PENT,3DNOW
\c PFADD            mmxreg,mmxrm             PENT,3DNOW
\c PFCMPEQ          mmxreg,mmxrm             PENT,3DNOW
\c PFCMPGE          mmxreg,mmxrm             PENT,3DNOW
\c PFCMPGT          mmxreg,mmxrm             PENT,3DNOW
\c PFMAX            mmxreg,mmxrm             PENT,3DNOW
\c PFMIN            mmxreg,mmxrm             PENT,3DNOW
\c PFMUL            mmxreg,mmxrm             PENT,3DNOW
\c PFRCP            mmxreg,mmxrm             PENT,3DNOW
\c PFRCPIT1         mmxreg,mmxrm             PENT,3DNOW
\c PFRCPIT2         mmxreg,mmxrm             PENT,3DNOW
\c PFRSQIT1         mmxreg,mmxrm             PENT,3DNOW
\c PFRSQRT          mmxreg,mmxrm             PENT,3DNOW
\c PFSUB            mmxreg,mmxrm             PENT,3DNOW
\c PFSUBR           mmxreg,mmxrm             PENT,3DNOW
\c PI2FD            mmxreg,mmxrm             PENT,3DNOW
\c PMACHRIW         mmxreg,mem               PENT,MMX,CYRIX
\c PMADDWD          mmxreg,mmxrm             PENT,MMX
\c PMAGW            mmxreg,mmxrm             PENT,MMX,CYRIX
\c PMULHRIW         mmxreg,mmxrm             PENT,MMX,CYRIX
\c PMULHRWA         mmxreg,mmxrm             PENT,3DNOW
\c PMULHRWC         mmxreg,mmxrm             PENT,MMX,CYRIX
\c PMULHW           mmxreg,mmxrm             PENT,MMX
\c PMULLW           mmxreg,mmxrm             PENT,MMX
\c PMVGEZB          mmxreg,mem               PENT,MMX,CYRIX
\c PMVLZB           mmxreg,mem               PENT,MMX,CYRIX
\c PMVNZB           mmxreg,mem               PENT,MMX,CYRIX
\c PMVZB            mmxreg,mem               PENT,MMX,CYRIX
\c POP              reg16                    8086
\c POP              reg32                    386,NOLONG
\c POP              reg64                    X64
\c POP              rm16                     8086
\c POP              rm32                     386,NOLONG
\c POP              rm64                     X64
\c POP              reg_cs                   8086,UNDOC,ND
\c POP              reg_dess                 8086,NOLONG
\c POP              reg_fsgs                 386
\c POPA                                      186,NOLONG
\c POPAD                                     386,NOLONG
\c POPAW                                     186,NOLONG
\c POPF                                      8086
\c POPFD                                     386,NOLONG
\c POPFQ                                     X64
\c POPFW                                     8086
\c POR              mmxreg,mmxrm             PENT,MMX
\c PREFETCH         mem                      PENT,3DNOW
\c PREFETCHW        mem                      PENT,3DNOW
\c PSLLD            mmxreg,mmxrm             PENT,MMX
\c PSLLD            mmxreg,imm               PENT,MMX
\c PSLLQ            mmxreg,mmxrm             PENT,MMX
\c PSLLQ            mmxreg,imm               PENT,MMX
\c PSLLW            mmxreg,mmxrm             PENT,MMX
\c PSLLW            mmxreg,imm               PENT,MMX
\c PSRAD            mmxreg,mmxrm             PENT,MMX
\c PSRAD            mmxreg,imm               PENT,MMX
\c PSRAW            mmxreg,mmxrm             PENT,MMX
\c PSRAW            mmxreg,imm               PENT,MMX
\c PSRLD            mmxreg,mmxrm             PENT,MMX
\c PSRLD            mmxreg,imm               PENT,MMX
\c PSRLQ            mmxreg,mmxrm             PENT,MMX
\c PSRLQ            mmxreg,imm               PENT,MMX
\c PSRLW            mmxreg,mmxrm             PENT,MMX
\c PSRLW            mmxreg,imm               PENT,MMX
\c PSUBB            mmxreg,mmxrm             PENT,MMX
\c PSUBD            mmxreg,mmxrm             PENT,MMX
\c PSUBSB           mmxreg,mmxrm             PENT,MMX
\c PSUBSIW          mmxreg,mmxrm             PENT,MMX,CYRIX
\c PSUBSW           mmxreg,mmxrm             PENT,MMX
\c PSUBUSB          mmxreg,mmxrm             PENT,MMX
\c PSUBUSW          mmxreg,mmxrm             PENT,MMX
\c PSUBW            mmxreg,mmxrm             PENT,MMX
\c PUNPCKHBW        mmxreg,mmxrm             PENT,MMX
\c PUNPCKHDQ        mmxreg,mmxrm             PENT,MMX
\c PUNPCKHWD        mmxreg,mmxrm             PENT,MMX
\c PUNPCKLBW        mmxreg,mmxrm             PENT,MMX
\c PUNPCKLDQ        mmxreg,mmxrm             PENT,MMX
\c PUNPCKLWD        mmxreg,mmxrm             PENT,MMX
\c PUSH             reg16                    8086
\c PUSH             reg32                    386,NOLONG
\c PUSH             reg64                    X64
\c PUSH             rm16                     8086
\c PUSH             rm32                     386,NOLONG
\c PUSH             rm64                     X64
\c PUSH             reg_cs                   8086,NOLONG
\c PUSH             reg_dess                 8086,NOLONG
\c PUSH             reg_fsgs                 386
\c PUSH             imm8                     186
\c PUSH             imm16                    186,AR0,SZ
\c PUSH             imm32                    386,NOLONG,AR0,SZ
\c PUSH             imm32                    386,NOLONG,SD
\c PUSH             imm64                    X64,AR0,SZ
\c PUSHA                                     186,NOLONG
\c PUSHAD                                    386,NOLONG
\c PUSHAW                                    186,NOLONG
\c PUSHF                                     8086
\c PUSHFD                                    386,NOLONG
\c PUSHFQ                                    X64
\c PUSHFW                                    8086
\c PXOR             mmxreg,mmxrm             PENT,MMX
\c RCL              rm8,unity                8086
\c RCL              rm8,reg_cl               8086
\c RCL              rm8,imm                  186
\c RCL              rm16,unity               8086
\c RCL              rm16,reg_cl              8086
\c RCL              rm16,imm                 186
\c RCL              rm32,unity               386
\c RCL              rm32,reg_cl              386
\c RCL              rm32,imm                 386
\c RCL              rm64,unity               X64
\c RCL              rm64,reg_cl              X64
\c RCL              rm64,imm                 X64
\c RCR              rm8,unity                8086
\c RCR              rm8,reg_cl               8086
\c RCR              rm8,imm                  186
\c RCR              rm16,unity               8086
\c RCR              rm16,reg_cl              8086
\c RCR              rm16,imm                 186
\c RCR              rm32,unity               386
\c RCR              rm32,reg_cl              386
\c RCR              rm32,imm                 386
\c RCR              rm64,unity               X64
\c RCR              rm64,reg_cl              X64
\c RCR              rm64,imm                 X64
\c RDSHR            rm32                     P6,CYRIXM
\c RDMSR                                     PENT,PRIV
\c RDPMC                                     P6
\c RDTSC                                     PENT
\c RDTSCP                                    X86_64
\c RET                                       8086
\c RET              imm                      8086,SW
\c RETF                                      8086
\c RETF             imm                      8086,SW
\c RETN                                      8086
\c RETN             imm                      8086,SW
\c ROL              rm8,unity                8086
\c ROL              rm8,reg_cl               8086
\c ROL              rm8,imm                  186
\c ROL              rm16,unity               8086
\c ROL              rm16,reg_cl              8086
\c ROL              rm16,imm                 186
\c ROL              rm32,unity               386
\c ROL              rm32,reg_cl              386
\c ROL              rm32,imm                 386
\c ROL              rm64,unity               X64
\c ROL              rm64,reg_cl              X64
\c ROL              rm64,imm                 X64
\c ROR              rm8,unity                8086
\c ROR              rm8,reg_cl               8086
\c ROR              rm8,imm                  186
\c ROR              rm16,unity               8086
\c ROR              rm16,reg_cl              8086
\c ROR              rm16,imm                 186
\c ROR              rm32,unity               386
\c ROR              rm32,reg_cl              386
\c ROR              rm32,imm                 386
\c ROR              rm64,unity               X64
\c ROR              rm64,reg_cl              X64
\c ROR              rm64,imm                 X64
\c RDM                                       P6,CYRIX,ND
\c RSDC             reg_sreg,mem80           486,CYRIXM
\c RSLDT            mem80                    486,CYRIXM
\c RSM                                       PENTM
\c RSTS             mem80                    486,CYRIXM
\c SAHF                                      8086
\c SAL              rm8,unity                8086,ND
\c SAL              rm8,reg_cl               8086,ND
\c SAL              rm8,imm                  186,ND
\c SAL              rm16,unity               8086,ND
\c SAL              rm16,reg_cl              8086,ND
\c SAL              rm16,imm                 186,ND
\c SAL              rm32,unity               386,ND
\c SAL              rm32,reg_cl              386,ND
\c SAL              rm32,imm                 386,ND
\c SAL              rm64,unity               X64,ND
\c SAL              rm64,reg_cl              X64,ND
\c SAL              rm64,imm                 X64,ND
\c SALC                                      8086,UNDOC
\c SAR              rm8,unity                8086
\c SAR              rm8,reg_cl               8086
\c SAR              rm8,imm                  186
\c SAR              rm16,unity               8086
\c SAR              rm16,reg_cl              8086
\c SAR              rm16,imm                 186
\c SAR              rm32,unity               386
\c SAR              rm32,reg_cl              386
\c SAR              rm32,imm                 386
\c SAR              rm64,unity               X64
\c SAR              rm64,reg_cl              X64
\c SAR              rm64,imm                 X64
\c SBB              mem,reg8                 8086
\c SBB              reg8,reg8                8086
\c SBB              mem,reg16                8086
\c SBB              reg16,reg16              8086
\c SBB              mem,reg32                386
\c SBB              reg32,reg32              386
\c SBB              mem,reg64                X64
\c SBB              reg64,reg64              X64
\c SBB              reg8,mem                 8086
\c SBB              reg8,reg8                8086
\c SBB              reg16,mem                8086
\c SBB              reg16,reg16              8086
\c SBB              reg32,mem                386
\c SBB              reg32,reg32              386
\c SBB              reg64,mem                X64
\c SBB              reg64,reg64              X64
\c SBB              rm16,imm8                8086
\c SBB              rm32,imm8                386
\c SBB              rm64,imm8                X64
\c SBB              reg_al,imm               8086
\c SBB              reg_ax,sbyte16           8086
\c SBB              reg_ax,imm               8086
\c SBB              reg_eax,sbyte32          386
\c SBB              reg_eax,imm              386
\c SBB              reg_rax,sbyte64          X64
\c SBB              reg_rax,imm              X64
\c SBB              rm8,imm                  8086
\c SBB              rm16,imm                 8086
\c SBB              rm32,imm                 386
\c SBB              rm64,imm                 X64
\c SBB              mem,imm8                 8086
\c SBB              mem,imm16                8086
\c SBB              mem,imm32                386
\c SCASB                                     8086
\c SCASD                                     386
\c SCASQ                                     X64
\c SCASW                                     8086
\c SFENCE                                    X64,AMD
\c SGDT             mem                      286
\c SHL              rm8,unity                8086
\c SHL              rm8,reg_cl               8086
\c SHL              rm8,imm                  186
\c SHL              rm16,unity               8086
\c SHL              rm16,reg_cl              8086
\c SHL              rm16,imm                 186
\c SHL              rm32,unity               386
\c SHL              rm32,reg_cl              386
\c SHL              rm32,imm                 386
\c SHL              rm64,unity               X64
\c SHL              rm64,reg_cl              X64
\c SHL              rm64,imm                 X64
\c SHLD             mem,reg16,imm            3862
\c SHLD             reg16,reg16,imm          3862
\c SHLD             mem,reg32,imm            3862
\c SHLD             reg32,reg32,imm          3862
\c SHLD             mem,reg64,imm            X642
\c SHLD             reg64,reg64,imm          X642
\c SHLD             mem,reg16,reg_cl         386
\c SHLD             reg16,reg16,reg_cl       386
\c SHLD             mem,reg32,reg_cl         386
\c SHLD             reg32,reg32,reg_cl       386
\c SHLD             mem,reg64,reg_cl         X64
\c SHLD             reg64,reg64,reg_cl       X64
\c SHR              rm8,unity                8086
\c SHR              rm8,reg_cl               8086
\c SHR              rm8,imm                  186
\c SHR              rm16,unity               8086
\c SHR              rm16,reg_cl              8086
\c SHR              rm16,imm                 186
\c SHR              rm32,unity               386
\c SHR              rm32,reg_cl              386
\c SHR              rm32,imm                 386
\c SHR              rm64,unity               X64
\c SHR              rm64,reg_cl              X64
\c SHR              rm64,imm                 X64
\c SHRD             mem,reg16,imm            3862
\c SHRD             reg16,reg16,imm          3862
\c SHRD             mem,reg32,imm            3862
\c SHRD             reg32,reg32,imm          3862
\c SHRD             mem,reg64,imm            X642
\c SHRD             reg64,reg64,imm          X642
\c SHRD             mem,reg16,reg_cl         386
\c SHRD             reg16,reg16,reg_cl       386
\c SHRD             mem,reg32,reg_cl         386
\c SHRD             reg32,reg32,reg_cl       386
\c SHRD             mem,reg64,reg_cl         X64
\c SHRD             reg64,reg64,reg_cl       X64
\c SIDT             mem                      286
\c SLDT             mem                      286
\c SLDT             mem16                    286
\c SLDT             reg16                    286
\c SLDT             reg32                    386
\c SLDT             reg64                    X64,ND
\c SLDT             reg64                    X64
\c SKINIT                                    X64
\c SMI                                       386,UNDOC
\c SMINT                                     P6,CYRIX,ND
\c SMINTOLD                                  486,CYRIX,ND
\c SMSW             mem                      286
\c SMSW             mem16                    286
\c SMSW             reg16                    286
\c SMSW             reg32                    386
\c STC                                       8086
\c STD                                       8086
\c STGI                                      X64
\c STI                                       8086
\c STOSB                                     8086
\c STOSD                                     386
\c STOSQ                                     X64
\c STOSW                                     8086
\c STR              mem                      286,PROT
\c STR              mem16                    286,PROT
\c STR              reg16                    286,PROT
\c STR              reg32                    386,PROT
\c STR              reg64                    X64
\c SUB              mem,reg8                 8086
\c SUB              reg8,reg8                8086
\c SUB              mem,reg16                8086
\c SUB              reg16,reg16              8086
\c SUB              mem,reg32                386
\c SUB              reg32,reg32              386
\c SUB              mem,reg64                X64
\c SUB              reg64,reg64              X64
\c SUB              reg8,mem                 8086
\c SUB              reg8,reg8                8086
\c SUB              reg16,mem                8086
\c SUB              reg16,reg16              8086
\c SUB              reg32,mem                386
\c SUB              reg32,reg32              386
\c SUB              reg64,mem                X64
\c SUB              reg64,reg64              X64
\c SUB              rm16,imm8                8086
\c SUB              rm32,imm8                386
\c SUB              rm64,imm8                X64
\c SUB              reg_al,imm               8086
\c SUB              reg_ax,sbyte16           8086
\c SUB              reg_ax,imm               8086
\c SUB              reg_eax,sbyte32          386
\c SUB              reg_eax,imm              386
\c SUB              reg_rax,sbyte64          X64
\c SUB              reg_rax,imm              X64
\c SUB              rm8,imm                  8086
\c SUB              rm16,imm                 8086
\c SUB              rm32,imm                 386
\c SUB              rm64,imm                 X64
\c SUB              mem,imm8                 8086
\c SUB              mem,imm16                8086
\c SUB              mem,imm32                386
\c SVDC             mem80,reg_sreg           486,CYRIXM
\c SVLDT            mem80                    486,CYRIXM,ND
\c SVTS             mem80                    486,CYRIXM
\c SWAPGS                                    X64
\c SYSCALL                                   P6,AMD
\c SYSENTER                                  P6
\c SYSEXIT                                   P6,PRIV
\c SYSRET                                    P6,PRIV,AMD
\c TEST             mem,reg8                 8086
\c TEST             reg8,reg8                8086
\c TEST             mem,reg16                8086
\c TEST             reg16,reg16              8086
\c TEST             mem,reg32                386
\c TEST             reg32,reg32              386
\c TEST             mem,reg64                X64
\c TEST             reg64,reg64              X64
\c TEST             reg8,mem                 8086
\c TEST             reg16,mem                8086
\c TEST             reg32,mem                386
\c TEST             reg64,mem                X64
\c TEST             reg_al,imm               8086
\c TEST             reg_ax,imm               8086
\c TEST             reg_eax,imm              386
\c TEST             reg_rax,imm              X64
\c TEST             rm8,imm                  8086
\c TEST             rm16,imm                 8086
\c TEST             rm32,imm                 386
\c TEST             rm64,imm                 X64
\c TEST             mem,imm8                 8086
\c TEST             mem,imm16                8086
\c TEST             mem,imm32                386
\c UD0                                       186,UNDOC
\c UD1                                       186,UNDOC
\c UD2B                                      186,UNDOC,ND
\c UD2                                       186
\c UD2A                                      186,ND
\c UMOV             mem,reg8                 386,UNDOC,ND
\c UMOV             reg8,reg8                386,UNDOC,ND
\c UMOV             mem,reg16                386,UNDOC,ND
\c UMOV             reg16,reg16              386,UNDOC,ND
\c UMOV             mem,reg32                386,UNDOC,ND
\c UMOV             reg32,reg32              386,UNDOC,ND
\c UMOV             reg8,mem                 386,UNDOC,ND
\c UMOV             reg8,reg8                386,UNDOC,ND
\c UMOV             reg16,mem                386,UNDOC,ND
\c UMOV             reg16,reg16              386,UNDOC,ND
\c UMOV             reg32,mem                386,UNDOC,ND
\c UMOV             reg32,reg32              386,UNDOC,ND
\c VERR             mem                      286,PROT
\c VERR             mem16                    286,PROT
\c VERR             reg16                    286,PROT
\c VERW             mem                      286,PROT
\c VERW             mem16                    286,PROT
\c VERW             reg16                    286,PROT
\c FWAIT                                     8086
\c WBINVD                                    486,PRIV
\c WRSHR            rm32                     P6,CYRIXM
\c WRMSR                                     PENT,PRIV
\c XADD             mem,reg8                 486
\c XADD             reg8,reg8                486
\c XADD             mem,reg16                486
\c XADD             reg16,reg16              486
\c XADD             mem,reg32                486
\c XADD             reg32,reg32              486
\c XADD             mem,reg64                X64
\c XADD             reg64,reg64              X64
\c XBTS             reg16,mem                386,SW,UNDOC,ND
\c XBTS             reg16,reg16              386,UNDOC,ND
\c XBTS             reg32,mem                386,SD,UNDOC,ND
\c XBTS             reg32,reg32              386,UNDOC,ND
\c XCHG             reg_ax,reg16             8086
\c XCHG             reg_eax,reg32na          386
\c XCHG             reg_rax,reg64            X64
\c XCHG             reg16,reg_ax             8086
\c XCHG             reg32na,reg_eax          386
\c XCHG             reg64,reg_rax            X64
\c XCHG             reg_eax,reg_eax          386,NOLONG
\c XCHG             reg8,mem                 8086
\c XCHG             reg8,reg8                8086
\c XCHG             reg16,mem                8086
\c XCHG             reg16,reg16              8086
\c XCHG             reg32,mem                386
\c XCHG             reg32,reg32              386
\c XCHG             reg64,mem                X64
\c XCHG             reg64,reg64              X64
\c XCHG             mem,reg8                 8086
\c XCHG             reg8,reg8                8086
\c XCHG             mem,reg16                8086
\c XCHG             reg16,reg16              8086
\c XCHG             mem,reg32                386
\c XCHG             reg32,reg32              386
\c XCHG             mem,reg64                X64
\c XCHG             reg64,reg64              X64
\c XLATB                                     8086
\c XLAT                                      8086
\c XOR              mem,reg8                 8086
\c XOR              reg8,reg8                8086
\c XOR              mem,reg16                8086
\c XOR              reg16,reg16              8086
\c XOR              mem,reg32                386
\c XOR              reg32,reg32              386
\c XOR              mem,reg64                X64
\c XOR              reg64,reg64              X64
\c XOR              reg8,mem                 8086
\c XOR              reg8,reg8                8086
\c XOR              reg16,mem                8086
\c XOR              reg16,reg16              8086
\c XOR              reg32,mem                386
\c XOR              reg32,reg32              386
\c XOR              reg64,mem                X64
\c XOR              reg64,reg64              X64
\c XOR              rm16,imm8                8086
\c XOR              rm32,imm8                386
\c XOR              rm64,imm8                X64
\c XOR              reg_al,imm               8086
\c XOR              reg_ax,sbyte16           8086
\c XOR              reg_ax,imm               8086
\c XOR              reg_eax,sbyte32          386
\c XOR              reg_eax,imm              386
\c XOR              reg_rax,sbyte64          X64
\c XOR              reg_rax,imm              X64
\c XOR              rm8,imm                  8086
\c XOR              rm16,imm                 8086
\c XOR              rm32,imm                 386
\c XOR              rm64,imm                 X64
\c XOR              mem,imm8                 8086
\c XOR              mem,imm16                8086
\c XOR              mem,imm32                386
\c CMOVcc           reg16,mem                P6
\c CMOVcc           reg16,reg16              P6
\c CMOVcc           reg32,mem                P6
\c CMOVcc           reg32,reg32              P6
\c CMOVcc           reg64,mem                X64
\c CMOVcc           reg64,reg64              X64
\c Jcc              imm|near                 386
\c Jcc              imm16|near               386
\c Jcc              imm32|near               386
\c Jcc              imm|short                8086,ND
\c Jcc              imm                      8086,ND
\c Jcc              imm                      386,ND
\c Jcc              imm                      8086,ND
\c Jcc              imm                      8086
\c SETcc            mem                      386
\c SETcc            reg8                     386

\S{} Katmai Streaming SIMD instructions (SSE -- a.k.a. KNI, XMM, MMX2)

\c ADDPS            xmmreg,xmmrm             KATMAI,SSE
\c ADDSS            xmmreg,xmmrm             KATMAI,SSE,SD
\c ANDNPS           xmmreg,xmmrm             KATMAI,SSE
\c ANDPS            xmmreg,xmmrm             KATMAI,SSE
\c CMPEQPS          xmmreg,xmmrm             KATMAI,SSE
\c CMPEQSS          xmmreg,xmmrm             KATMAI,SSE
\c CMPLEPS          xmmreg,xmmrm             KATMAI,SSE
\c CMPLESS          xmmreg,xmmrm             KATMAI,SSE
\c CMPLTPS          xmmreg,xmmrm             KATMAI,SSE
\c CMPLTSS          xmmreg,xmmrm             KATMAI,SSE
\c CMPNEQPS         xmmreg,xmmrm             KATMAI,SSE
\c CMPNEQSS         xmmreg,xmmrm             KATMAI,SSE
\c CMPNLEPS         xmmreg,xmmrm             KATMAI,SSE
\c CMPNLESS         xmmreg,xmmrm             KATMAI,SSE
\c CMPNLTPS         xmmreg,xmmrm             KATMAI,SSE
\c CMPNLTSS         xmmreg,xmmrm             KATMAI,SSE
\c CMPORDPS         xmmreg,xmmrm             KATMAI,SSE
\c CMPORDSS         xmmreg,xmmrm             KATMAI,SSE
\c CMPUNORDPS       xmmreg,xmmrm             KATMAI,SSE
\c CMPUNORDSS       xmmreg,xmmrm             KATMAI,SSE
\c CMPPS            xmmreg,mem,imm           KATMAI,SSE
\c CMPPS            xmmreg,xmmreg,imm        KATMAI,SSE
\c CMPSS            xmmreg,mem,imm           KATMAI,SSE
\c CMPSS            xmmreg,xmmreg,imm        KATMAI,SSE
\c COMISS           xmmreg,xmmrm             KATMAI,SSE
\c CVTPI2PS         xmmreg,mmxrm             KATMAI,SSE,MMX
\c CVTPS2PI         mmxreg,xmmrm             KATMAI,SSE,MMX
\c CVTSI2SS         xmmreg,mem               KATMAI,SSE,SD,AR1,ND
\c CVTSI2SS         xmmreg,rm32              KATMAI,SSE,SD,AR1
\c CVTSI2SS         xmmreg,rm64              X64,SSE,AR1
\c CVTSS2SI         reg32,xmmreg             KATMAI,SSE,SD,AR1
\c CVTSS2SI         reg32,mem                KATMAI,SSE,SD,AR1
\c CVTSS2SI         reg64,xmmreg             X64,SSE,SD,AR1
\c CVTSS2SI         reg64,mem                X64,SSE,SD,AR1
\c CVTTPS2PI        mmxreg,xmmrm             KATMAI,SSE,MMX
\c CVTTSS2SI        reg32,xmmrm              KATMAI,SSE,SD,AR1
\c CVTTSS2SI        reg64,xmmrm              X64,SSE,SD,AR1
\c DIVPS            xmmreg,xmmrm             KATMAI,SSE
\c DIVSS            xmmreg,xmmrm             KATMAI,SSE
\c LDMXCSR          mem                      KATMAI,SSE,SD
\c MAXPS            xmmreg,xmmrm             KATMAI,SSE
\c MAXSS            xmmreg,xmmrm             KATMAI,SSE
\c MINPS            xmmreg,xmmrm             KATMAI,SSE
\c MINSS            xmmreg,xmmrm             KATMAI,SSE
\c MOVAPS           xmmreg,mem               KATMAI,SSE
\c MOVAPS           mem,xmmreg               KATMAI,SSE
\c MOVAPS           xmmreg,xmmreg            KATMAI,SSE
\c MOVAPS           xmmreg,xmmreg            KATMAI,SSE
\c MOVHPS           xmmreg,mem               KATMAI,SSE
\c MOVHPS           mem,xmmreg               KATMAI,SSE
\c MOVLHPS          xmmreg,xmmreg            KATMAI,SSE
\c MOVLPS           xmmreg,mem               KATMAI,SSE
\c MOVLPS           mem,xmmreg               KATMAI,SSE
\c MOVHLPS          xmmreg,xmmreg            KATMAI,SSE
\c MOVMSKPS         reg32,xmmreg             KATMAI,SSE
\c MOVMSKPS         reg64,xmmreg             X64,SSE
\c MOVNTPS          mem,xmmreg               KATMAI,SSE
\c MOVSS            xmmreg,mem               KATMAI,SSE
\c MOVSS            mem,xmmreg               KATMAI,SSE
\c MOVSS            xmmreg,xmmreg            KATMAI,SSE
\c MOVSS            xmmreg,xmmreg            KATMAI,SSE
\c MOVUPS           xmmreg,mem               KATMAI,SSE
\c MOVUPS           mem,xmmreg               KATMAI,SSE
\c MOVUPS           xmmreg,xmmreg            KATMAI,SSE
\c MOVUPS           xmmreg,xmmreg            KATMAI,SSE
\c MULPS            xmmreg,xmmrm             KATMAI,SSE
\c MULSS            xmmreg,xmmrm             KATMAI,SSE
\c ORPS             xmmreg,xmmrm             KATMAI,SSE
\c RCPPS            xmmreg,xmmrm             KATMAI,SSE
\c RCPSS            xmmreg,xmmrm             KATMAI,SSE
\c RSQRTPS          xmmreg,xmmrm             KATMAI,SSE
\c RSQRTSS          xmmreg,xmmrm             KATMAI,SSE
\c SHUFPS           xmmreg,mem,imm           KATMAI,SSE
\c SHUFPS           xmmreg,xmmreg,imm        KATMAI,SSE
\c SQRTPS           xmmreg,xmmrm             KATMAI,SSE
\c SQRTSS           xmmreg,xmmrm             KATMAI,SSE
\c STMXCSR          mem                      KATMAI,SSE,SD
\c SUBPS            xmmreg,xmmrm             KATMAI,SSE
\c SUBSS            xmmreg,xmmrm             KATMAI,SSE
\c UCOMISS          xmmreg,xmmrm             KATMAI,SSE
\c UNPCKHPS         xmmreg,xmmrm             KATMAI,SSE
\c UNPCKLPS         xmmreg,xmmrm             KATMAI,SSE
\c XORPS            xmmreg,xmmrm             KATMAI,SSE

\S{} Introduced in Deschutes but necessary for SSE support

\c FXRSTOR          mem                      P6,SSE,FPU
\c FXSAVE           mem                      P6,SSE,FPU

\S{} XSAVE group (AVX and extended state)

\c XGETBV                                    NEHALEM
\c XSETBV                                    NEHALEM,PRIV
\c XSAVE            mem                      NEHALEM
\c XRSTOR           mem                      NEHALEM

\S{} Generic memory operations

\c PREFETCHNTA      mem                      KATMAI
\c PREFETCHT0       mem                      KATMAI
\c PREFETCHT1       mem                      KATMAI
\c PREFETCHT2       mem                      KATMAI
\c SFENCE                                    KATMAI

\S{} New MMX instructions introduced in Katmai

\c MASKMOVQ         mmxreg,mmxreg            KATMAI,MMX
\c MOVNTQ           mem,mmxreg               KATMAI,MMX
\c PAVGB            mmxreg,mmxrm             KATMAI,MMX
\c PAVGW            mmxreg,mmxrm             KATMAI,MMX
\c PEXTRW           reg32,mmxreg,imm         KATMAI,MMX
\c PINSRW           mmxreg,mem,imm           KATMAI,MMX
\c PINSRW           mmxreg,rm16,imm          KATMAI,MMX
\c PINSRW           mmxreg,reg32,imm         KATMAI,MMX
\c PMAXSW           mmxreg,mmxrm             KATMAI,MMX
\c PMAXUB           mmxreg,mmxrm             KATMAI,MMX
\c PMINSW           mmxreg,mmxrm             KATMAI,MMX
\c PMINUB           mmxreg,mmxrm             KATMAI,MMX
\c PMOVMSKB         reg32,mmxreg             KATMAI,MMX
\c PMULHUW          mmxreg,mmxrm             KATMAI,MMX
\c PSADBW           mmxreg,mmxrm             KATMAI,MMX
\c PSHUFW           mmxreg,mmxrm,imm         KATMAI,MMX2

\S{} AMD Enhanced 3DNow! (Athlon) instructions

\c PF2IW            mmxreg,mmxrm             PENT,3DNOW
\c PFNACC           mmxreg,mmxrm             PENT,3DNOW
\c PFPNACC          mmxreg,mmxrm             PENT,3DNOW
\c PI2FW            mmxreg,mmxrm             PENT,3DNOW
\c PSWAPD           mmxreg,mmxrm             PENT,3DNOW

\S{} Willamette SSE2 Cacheability Instructions

\c MASKMOVDQU       xmmreg,xmmreg            WILLAMETTE,SSE2
\c CLFLUSH          mem                      WILLAMETTE,SSE2
\c MOVNTDQ          mem,xmmreg               WILLAMETTE,SSE2,SO
\c MOVNTI           mem,reg32                WILLAMETTE,SD
\c MOVNTI           mem,reg64                X64
\c MOVNTPD          mem,xmmreg               WILLAMETTE,SSE2,SO
\c LFENCE                                    WILLAMETTE,SSE2
\c MFENCE                                    WILLAMETTE,SSE2

\S{} Willamette MMX instructions (SSE2 SIMD Integer Instructions)

\c MOVD             mem,xmmreg               WILLAMETTE,SSE2,SD
\c MOVD             xmmreg,mem               WILLAMETTE,SSE2,SD
\c MOVD             xmmreg,rm32              WILLAMETTE,SSE2
\c MOVD             rm32,xmmreg              WILLAMETTE,SSE2
\c MOVDQA           xmmreg,xmmreg            WILLAMETTE,SSE2
\c MOVDQA           mem,xmmreg               WILLAMETTE,SSE2,SO
\c MOVDQA           xmmreg,mem               WILLAMETTE,SSE2,SO
\c MOVDQA           xmmreg,xmmreg            WILLAMETTE,SSE2
\c MOVDQU           xmmreg,xmmreg            WILLAMETTE,SSE2
\c MOVDQU           mem,xmmreg               WILLAMETTE,SSE2,SO
\c MOVDQU           xmmreg,mem               WILLAMETTE,SSE2,SO
\c MOVDQU           xmmreg,xmmreg            WILLAMETTE,SSE2
\c MOVDQ2Q          mmxreg,xmmreg            WILLAMETTE,SSE2
\c MOVQ             xmmreg,xmmreg            WILLAMETTE,SSE2
\c MOVQ             xmmreg,xmmreg            WILLAMETTE,SSE2
\c MOVQ             mem,xmmreg               WILLAMETTE,SSE2
\c MOVQ             xmmreg,mem               WILLAMETTE,SSE2
\c MOVQ             xmmreg,rm64              X64,SSE2
\c MOVQ             rm64,xmmreg              X64,SSE2
\c MOVQ2DQ          xmmreg,mmxreg            WILLAMETTE,SSE2
\c PACKSSWB         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PACKSSDW         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PACKUSWB         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDB            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDQ            mmxreg,mmxrm             WILLAMETTE,MMX
\c PADDQ            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDSB           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDSW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDUSB          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PADDUSW          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PAND             xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PANDN            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PAVGB            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PAVGW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PCMPEQB          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PCMPEQW          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PCMPEQD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PCMPGTB          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PCMPGTW          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PCMPGTD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PEXTRW           reg32,xmmreg,imm         WILLAMETTE,SSE2
\c PINSRW           xmmreg,reg16,imm         WILLAMETTE,SSE2
\c PINSRW           xmmreg,reg32,imm         WILLAMETTE,SSE2,ND
\c PINSRW           xmmreg,mem,imm           WILLAMETTE,SSE2
\c PINSRW           xmmreg,mem16,imm         WILLAMETTE,SSE2
\c PMADDWD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMAXSW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMAXUB           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMINSW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMINUB           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMOVMSKB         reg32,xmmreg             WILLAMETTE,SSE2
\c PMULHUW          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMULHW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMULLW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PMULUDQ          mmxreg,mmxrm             WILLAMETTE,SSE2,SO
\c PMULUDQ          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c POR              xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSADBW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSHUFD           xmmreg,xmmreg,imm        WILLAMETTE,SSE2
\c PSHUFD           xmmreg,mem,imm           WILLAMETTE,SSE22
\c PSHUFHW          xmmreg,xmmreg,imm        WILLAMETTE,SSE2
\c PSHUFHW          xmmreg,mem,imm           WILLAMETTE,SSE22
\c PSHUFLW          xmmreg,xmmreg,imm        WILLAMETTE,SSE2
\c PSHUFLW          xmmreg,mem,imm           WILLAMETTE,SSE22
\c PSLLDQ           xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSLLW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSLLW            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSLLD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSLLD            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSLLQ            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSLLQ            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSRAW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSRAW            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSRAD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSRAD            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSRLDQ           xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSRLW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSRLW            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSRLD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSRLD            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSRLQ            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSRLQ            xmmreg,imm               WILLAMETTE,SSE2,AR1
\c PSUBB            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSUBW            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSUBD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSUBQ            mmxreg,mmxrm             WILLAMETTE,SSE2,SO
\c PSUBQ            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSUBSB           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSUBSW           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSUBUSB          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PSUBUSW          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKHBW        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKHWD        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKHDQ        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKHQDQ       xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKLBW        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKLWD        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKLDQ        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PUNPCKLQDQ       xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c PXOR             xmmreg,xmmrm             WILLAMETTE,SSE2,SO

\S{} Willamette Streaming SIMD instructions (SSE2)

\c ADDPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c ADDSD            xmmreg,xmmrm             WILLAMETTE,SSE2
\c ANDNPD           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c ANDPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPEQPD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPEQSD          xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPLEPD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPLESD          xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPLTPD          xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPLTSD          xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPNEQPD         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPNEQSD         xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPNLEPD         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPNLESD         xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPNLTPD         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPNLTSD         xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPORDPD         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPORDSD         xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPUNORDPD       xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CMPUNORDSD       xmmreg,xmmrm             WILLAMETTE,SSE2
\c CMPPD            xmmreg,xmmrm,imm         WILLAMETTE,SSE22
\c CMPSD            xmmreg,xmmrm,imm         WILLAMETTE,SSE2
\c COMISD           xmmreg,xmmrm             WILLAMETTE,SSE2
\c CVTDQ2PD         xmmreg,xmmrm             WILLAMETTE,SSE2
\c CVTDQ2PS         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTPD2DQ         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTPD2PI         mmxreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTPD2PS         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTPI2PD         xmmreg,mmxrm             WILLAMETTE,SSE2
\c CVTPS2DQ         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTPS2PD         xmmreg,xmmrm             WILLAMETTE,SSE2
\c CVTSD2SI         reg32,xmmreg             WILLAMETTE,SSE2,AR1
\c CVTSD2SI         reg32,mem                WILLAMETTE,SSE2,AR1
\c CVTSD2SI         reg64,xmmreg             X64,SSE2,AR1
\c CVTSD2SI         reg64,mem                X64,SSE2,AR1
\c CVTSD2SS         xmmreg,xmmrm             WILLAMETTE,SSE2
\c CVTSI2SD         xmmreg,mem               WILLAMETTE,SSE2,SD,AR1,ND
\c CVTSI2SD         xmmreg,rm32              WILLAMETTE,SSE2,SD,AR1
\c CVTSI2SD         xmmreg,rm64              X64,SSE2,AR1
\c CVTSS2SD         xmmreg,xmmrm             WILLAMETTE,SSE2,SD
\c CVTTPD2PI        mmxreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTTPD2DQ        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTTPS2DQ        xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c CVTTSD2SI        reg32,xmmreg             WILLAMETTE,SSE2,AR1
\c CVTTSD2SI        reg32,mem                WILLAMETTE,SSE2,AR1
\c CVTTSD2SI        reg64,xmmreg             X64,SSE2,AR1
\c CVTTSD2SI        reg64,mem                X64,SSE2,AR1
\c DIVPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c DIVSD            xmmreg,xmmrm             WILLAMETTE,SSE2
\c MAXPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c MAXSD            xmmreg,xmmrm             WILLAMETTE,SSE2
\c MINPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c MINSD            xmmreg,xmmrm             WILLAMETTE,SSE2
\c MOVAPD           xmmreg,xmmreg            WILLAMETTE,SSE2
\c MOVAPD           xmmreg,xmmreg            WILLAMETTE,SSE2
\c MOVAPD           mem,xmmreg               WILLAMETTE,SSE2,SO
\c MOVAPD           xmmreg,mem               WILLAMETTE,SSE2,SO
\c MOVHPD           mem,xmmreg               WILLAMETTE,SSE2
\c MOVHPD           xmmreg,mem               WILLAMETTE,SSE2
\c MOVLPD           mem,xmmreg               WILLAMETTE,SSE2
\c MOVLPD           xmmreg,mem               WILLAMETTE,SSE2
\c MOVMSKPD         reg32,xmmreg             WILLAMETTE,SSE2
\c MOVMSKPD         reg64,xmmreg             X64,SSE2
\c MOVSD            xmmreg,xmmreg            WILLAMETTE,SSE2
\c MOVSD            xmmreg,xmmreg            WILLAMETTE,SSE2
\c MOVSD            mem,xmmreg               WILLAMETTE,SSE2
\c MOVSD            xmmreg,mem               WILLAMETTE,SSE2
\c MOVUPD           xmmreg,xmmreg            WILLAMETTE,SSE2
\c MOVUPD           xmmreg,xmmreg            WILLAMETTE,SSE2
\c MOVUPD           mem,xmmreg               WILLAMETTE,SSE2,SO
\c MOVUPD           xmmreg,mem               WILLAMETTE,SSE2,SO
\c MULPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c MULSD            xmmreg,xmmrm             WILLAMETTE,SSE2
\c ORPD             xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c SHUFPD           xmmreg,xmmreg,imm        WILLAMETTE,SSE2
\c SHUFPD           xmmreg,mem,imm           WILLAMETTE,SSE2
\c SQRTPD           xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c SQRTSD           xmmreg,xmmrm             WILLAMETTE,SSE2
\c SUBPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c SUBSD            xmmreg,xmmrm             WILLAMETTE,SSE2
\c UCOMISD          xmmreg,xmmrm             WILLAMETTE,SSE2
\c UNPCKHPD         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c UNPCKLPD         xmmreg,xmmrm             WILLAMETTE,SSE2,SO
\c XORPD            xmmreg,xmmrm             WILLAMETTE,SSE2,SO

\S{} Prescott New Instructions (SSE3)

\c ADDSUBPD         xmmreg,xmmrm             PRESCOTT,SSE3,SO
\c ADDSUBPS         xmmreg,xmmrm             PRESCOTT,SSE3,SO
\c HADDPD           xmmreg,xmmrm             PRESCOTT,SSE3,SO
\c HADDPS           xmmreg,xmmrm             PRESCOTT,SSE3,SO
\c HSUBPD           xmmreg,xmmrm             PRESCOTT,SSE3,SO
\c HSUBPS           xmmreg,xmmrm             PRESCOTT,SSE3,SO
\c LDDQU            xmmreg,mem               PRESCOTT,SSE3,SO
\c MOVDDUP          xmmreg,xmmrm             PRESCOTT,SSE3
\c MOVSHDUP         xmmreg,xmmrm             PRESCOTT,SSE3
\c MOVSLDUP         xmmreg,xmmrm             PRESCOTT,SSE3

\S{} VMX Instructions

\c VMCALL                                    VMX
\c VMCLEAR          mem                      VMX
\c VMLAUNCH                                  VMX
\c VMLOAD                                    X64,VMX
\c VMMCALL                                   X64,VMX
\c VMPTRLD          mem                      VMX
\c VMPTRST          mem                      VMX
\c VMREAD           rm32,reg32               VMX,NOLONG,SD
\c VMREAD           rm64,reg64               X64,VMX
\c VMRESUME                                  VMX
\c VMRUN                                     X64,VMX
\c VMSAVE                                    X64,VMX
\c VMWRITE          reg32,rm32               VMX,NOLONG,SD
\c VMWRITE          reg64,rm64               X64,VMX
\c VMXOFF                                    VMX
\c VMXON            mem                      VMX

\S{} Extended Page Tables VMX instructions

\c INVEPT           reg32,mem                VMX,SO,NOLONG
\c INVEPT           reg64,mem                VMX,SO,LONG
\c INVVPID          reg32,mem                VMX,SO,NOLONG
\c INVVPID          reg64,mem                VMX,SO,LONG

\S{} Tejas New Instructions (SSSE3)

\c PABSB            mmxreg,mmxrm             SSSE3,MMX
\c PABSB            xmmreg,xmmrm             SSSE3
\c PABSW            mmxreg,mmxrm             SSSE3,MMX
\c PABSW            xmmreg,xmmrm             SSSE3
\c PABSD            mmxreg,mmxrm             SSSE3,MMX
\c PABSD            xmmreg,xmmrm             SSSE3
\c PALIGNR          mmxreg,mmxrm,imm         SSSE3,MMX
\c PALIGNR          xmmreg,xmmrm,imm         SSSE3
\c PHADDW           mmxreg,mmxrm             SSSE3,MMX
\c PHADDW           xmmreg,xmmrm             SSSE3
\c PHADDD           mmxreg,mmxrm             SSSE3,MMX
\c PHADDD           xmmreg,xmmrm             SSSE3
\c PHADDSW          mmxreg,mmxrm             SSSE3,MMX
\c PHADDSW          xmmreg,xmmrm             SSSE3
\c PHSUBW           mmxreg,mmxrm             SSSE3,MMX
\c PHSUBW           xmmreg,xmmrm             SSSE3
\c PHSUBD           mmxreg,mmxrm             SSSE3,MMX
\c PHSUBD           xmmreg,xmmrm             SSSE3
\c PHSUBSW          mmxreg,mmxrm             SSSE3,MMX
\c PHSUBSW          xmmreg,xmmrm             SSSE3
\c PMADDUBSW        mmxreg,mmxrm             SSSE3,MMX
\c PMADDUBSW        xmmreg,xmmrm             SSSE3
\c PMULHRSW         mmxreg,mmxrm             SSSE3,MMX
\c PMULHRSW         xmmreg,xmmrm             SSSE3
\c PSHUFB           mmxreg,mmxrm             SSSE3,MMX
\c PSHUFB           xmmreg,xmmrm             SSSE3
\c PSIGNB           mmxreg,mmxrm             SSSE3,MMX
\c PSIGNB           xmmreg,xmmrm             SSSE3
\c PSIGNW           mmxreg,mmxrm             SSSE3,MMX
\c PSIGNW           xmmreg,xmmrm             SSSE3
\c PSIGND           mmxreg,mmxrm             SSSE3,MMX
\c PSIGND           xmmreg,xmmrm             SSSE3

\S{} AMD SSE4A

\c EXTRQ            xmmreg,imm,imm           SSE4A,AMD
\c EXTRQ            xmmreg,xmmreg            SSE4A,AMD
\c INSERTQ          xmmreg,xmmreg,imm,imm    SSE4A,AMD
\c INSERTQ          xmmreg,xmmreg            SSE4A,AMD
\c MOVNTSD          mem,xmmreg               SSE4A,AMD
\c MOVNTSS          mem,xmmreg               SSE4A,AMD,SD

\S{} New instructions in Barcelona

\c LZCNT            reg16,rm16               P6,AMD
\c LZCNT            reg32,rm32               P6,AMD
\c LZCNT            reg64,rm64               X64,AMD

\S{} Penryn New Instructions (SSE4.1)

\c BLENDPD          xmmreg,xmmrm,imm         SSE41
\c BLENDPS          xmmreg,xmmrm,imm         SSE41
\c BLENDVPD         xmmreg,xmmrm,xmm0        SSE41
\c BLENDVPS         xmmreg,xmmrm,xmm0        SSE41
\c DPPD             xmmreg,xmmrm,imm         SSE41
\c DPPS             xmmreg,xmmrm,imm         SSE41
\c EXTRACTPS        rm32,xmmreg,imm          SSE41
\c EXTRACTPS        reg64,xmmreg,imm         SSE41,X64
\c INSERTPS         xmmreg,xmmrm,imm         SSE41,SD
\c MOVNTDQA         xmmreg,mem               SSE41
\c MPSADBW          xmmreg,xmmrm,imm         SSE41
\c PACKUSDW         xmmreg,xmmrm             SSE41
\c PBLENDVB         xmmreg,xmmrm,xmm0        SSE41
\c PBLENDW          xmmreg,xmmrm,imm         SSE41
\c PCMPEQQ          xmmreg,xmmrm             SSE41
\c PEXTRB           reg32,xmmreg,imm         SSE41
\c PEXTRB           mem8,xmmreg,imm          SSE41
\c PEXTRB           reg64,xmmreg,imm         SSE41,X64
\c PEXTRD           rm32,xmmreg,imm          SSE41
\c PEXTRQ           rm64,xmmreg,imm          SSE41,X64
\c PEXTRW           reg32,xmmreg,imm         SSE41
\c PEXTRW           mem16,xmmreg,imm         SSE41
\c PEXTRW           reg64,xmmreg,imm         SSE41,X64
\c PHMINPOSUW       xmmreg,xmmrm             SSE41
\c PINSRB           xmmreg,mem,imm           SSE41
\c PINSRB           xmmreg,rm8,imm           SSE41
\c PINSRB           xmmreg,reg32,imm         SSE41
\c PINSRD           xmmreg,mem,imm           SSE41
\c PINSRD           xmmreg,rm32,imm          SSE41
\c PINSRQ           xmmreg,mem,imm           SSE41,X64
\c PINSRQ           xmmreg,rm64,imm          SSE41,X64
\c PMAXSB           xmmreg,xmmrm             SSE41
\c PMAXSD           xmmreg,xmmrm             SSE41
\c PMAXUD           xmmreg,xmmrm             SSE41
\c PMAXUW           xmmreg,xmmrm             SSE41
\c PMINSB           xmmreg,xmmrm             SSE41
\c PMINSD           xmmreg,xmmrm             SSE41
\c PMINUD           xmmreg,xmmrm             SSE41
\c PMINUW           xmmreg,xmmrm             SSE41
\c PMOVSXBW         xmmreg,xmmrm             SSE41
\c PMOVSXBD         xmmreg,xmmrm             SSE41,SD
\c PMOVSXBQ         xmmreg,xmmrm             SSE41,SW
\c PMOVSXWD         xmmreg,xmmrm             SSE41
\c PMOVSXWQ         xmmreg,xmmrm             SSE41,SD
\c PMOVSXDQ         xmmreg,xmmrm             SSE41
\c PMOVZXBW         xmmreg,xmmrm             SSE41
\c PMOVZXBD         xmmreg,xmmrm             SSE41,SD
\c PMOVZXBQ         xmmreg,xmmrm             SSE41,SW
\c PMOVZXWD         xmmreg,xmmrm             SSE41
\c PMOVZXWQ         xmmreg,xmmrm             SSE41,SD
\c PMOVZXDQ         xmmreg,xmmrm             SSE41
\c PMULDQ           xmmreg,xmmrm             SSE41
\c PMULLD           xmmreg,xmmrm             SSE41
\c PTEST            xmmreg,xmmrm             SSE41
\c ROUNDPD          xmmreg,xmmrm,imm         SSE41
\c ROUNDPS          xmmreg,xmmrm,imm         SSE41
\c ROUNDSD          xmmreg,xmmrm,imm         SSE41
\c ROUNDSS          xmmreg,xmmrm,imm         SSE41

\S{} Nehalem New Instructions (SSE4.2)

\c CRC32            reg32,rm8                SSE42
\c CRC32            reg32,rm16               SSE42
\c CRC32            reg32,rm32               SSE42
\c CRC32            reg64,rm8                SSE42,X64
\c CRC32            reg64,rm64               SSE42,X64
\c PCMPESTRI        xmmreg,xmmrm,imm         SSE42
\c PCMPESTRM        xmmreg,xmmrm,imm         SSE42
\c PCMPISTRI        xmmreg,xmmrm,imm         SSE42
\c PCMPISTRM        xmmreg,xmmrm,imm         SSE42
\c PCMPGTQ          xmmreg,xmmrm             SSE42
\c POPCNT           reg16,rm16               NEHALEM,SW
\c POPCNT           reg32,rm32               NEHALEM,SD
\c POPCNT           reg64,rm64               NEHALEM,X64

\S{} Intel SMX

\c GETSEC                                    KATMAI

\S{} Geode (Cyrix) 3DNow! additions

\c PFRCPV           mmxreg,mmxrm             PENT,3DNOW,CYRIX
\c PFRSQRTV         mmxreg,mmxrm             PENT,3DNOW,CYRIX

\S{} Intel new instructions in ???

\c MOVBE            reg16,mem16              NEHALEM
\c MOVBE            reg32,mem32              NEHALEM
\c MOVBE            reg64,mem64              NEHALEM
\c MOVBE            mem16,reg16              NEHALEM
\c MOVBE            mem32,reg32              NEHALEM
\c MOVBE            mem64,reg64              NEHALEM

\S{} Intel AES instructions

\c AESENC           xmmreg,xmmrm128          SSE,WESTMERE
\c AESENCLAST       xmmreg,xmmrm128          SSE,WESTMERE
\c AESDEC           xmmreg,xmmrm128          SSE,WESTMERE
\c AESDECLAST       xmmreg,xmmrm128          SSE,WESTMERE
\c AESIMC           xmmreg,xmmrm128          SSE,WESTMERE
\c AESKEYGENASSIST  xmmreg,xmmrm128,imm8     SSE,WESTMERE

\S{} Intel AVX AES instructions

\c VAESENC          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VAESENCLAST      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VAESDEC          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VAESDECLAST      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VAESIMC          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VAESKEYGENASSIST xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE

\S{} Intel AVX instructions

\c VADDPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VADDPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VADDPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VADDPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VADDSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VADDSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VADDSUBPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VADDSUBPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VADDSUBPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VADDSUBPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VANDPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VANDPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VANDPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VANDPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VANDNPD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VANDNPD          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VANDNPS          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VANDNPS          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VBLENDPD         xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VBLENDPD         ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VBLENDPS         xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VBLENDPS         ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VBLENDVPD        xmmreg,xmmreg,xmmrm128,xmmreg AVX,SANDYBRIDGE
\c VBLENDVPD        xmmreg,xmmrm128,xmm0     AVX,SANDYBRIDGE
\c VBLENDVPD        ymmreg,ymmreg,ymmrm256,ymmreg AVX,SANDYBRIDGE
\c VBLENDVPD        ymmreg,ymmrm256,ymm0     AVX,SANDYBRIDGE
\c VBLENDVPS        xmmreg,xmmreg,xmmrm128,xmmreg AVX,SANDYBRIDGE
\c VBLENDVPS        xmmreg,xmmrm128,xmm0     AVX,SANDYBRIDGE
\c VBLENDVPS        ymmreg,ymmreg,ymmrm256,ymmreg AVX,SANDYBRIDGE
\c VBLENDVPD        ymmreg,ymmrm256,ymm0     AVX,SANDYBRIDGE
\c VBROADCASTSS     xmmreg,mem32             AVX,SANDYBRIDGE
\c VBROADCASTSS     ymmreg,mem32             AVX,SANDYBRIDGE
\c VBROADCASTSD     ymmreg,mem64             AVX,SANDYBRIDGE
\c VBROADCASTF128   ymmreg,mem128            AVX,SANDYBRIDGE
\c VCMPEQPD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQPD         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLTPD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLTPD         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLEPD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLEPD         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPUNORDPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPUNORDPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLTPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLTPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLEPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLEPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPORDPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPORDPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPEQ_UQPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQ_UQPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGEPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGEPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGTPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGTPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPFALSEPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPFALSEPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQ_OQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQ_OQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGEPD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGEPD         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGTPD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGTPD         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPTRUEPD       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPTRUEPD       ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPEQ_OSPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQ_OSPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLT_OQPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLT_OQPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLE_OQPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLE_OQPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPUNORD_SPD    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPUNORD_SPD    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQ_USPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQ_USPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLT_UQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLT_UQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLE_UQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLE_UQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPORD_SPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPORD_SPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPEQ_USPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQ_USPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGE_UQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGE_UQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGT_UQPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGT_UQPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPFALSE_OSPD   xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPFALSE_OSPD   ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQ_OSPD     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQ_OSPD     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGE_OQPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGE_OQPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGT_OQPD      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGT_OQPD      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPTRUE_USPD    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPTRUE_USPD    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPPD           xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VCMPPD           ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VCMPEQPS         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQPS         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLTPS         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLTPS         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLEPS         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLEPS         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPUNORDPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPUNORDPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLTPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLTPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLEPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLEPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPORDPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPORDPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPEQ_UQPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQ_UQPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGEPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGEPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGTPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGTPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPFALSEPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPFALSEPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQ_OQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQ_OQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGEPS         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGEPS         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGTPS         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGTPS         ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPTRUEPS       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPTRUEPS       ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPEQ_OSPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQ_OSPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLT_OQPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLT_OQPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPLE_OQPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPLE_OQPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPUNORD_SPS    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPUNORD_SPS    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQ_USPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQ_USPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLT_UQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLT_UQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNLE_UQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNLE_UQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPORD_SPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPORD_SPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPEQ_USPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPEQ_USPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGE_UQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGE_UQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNGT_UQPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNGT_UQPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPFALSE_OSPS   xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPFALSE_OSPS   ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPNEQ_OSPS     xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPNEQ_OSPS     ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGE_OQPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGE_OQPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPGT_OQPS      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPGT_OQPS      ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPTRUE_USPS    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VCMPTRUE_USPS    ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VCMPPS           xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VCMPPS           ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VCMPEQSD         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLTSD         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLESD         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPUNORDSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNEQSD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLTSD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLESD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPORDSD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPEQ_UQSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGESD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGTSD        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPFALSESD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNEQ_OQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGESD         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGTSD         xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPTRUESD       xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPEQ_OSSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLT_OQSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPLE_OQSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPUNORD_SSD    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNEQ_USSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLT_UQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNLE_UQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPORD_SSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPEQ_USSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGE_UQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNGT_UQSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPFALSE_OSSD   xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPNEQ_OSSD     xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGE_OQSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPGT_OQSD      xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPTRUE_USSD    xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCMPSD           xmmreg,xmmreg*,xmmrm64,imm8 AVX,SANDYBRIDGE
\c VCMPEQSS         xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPLTSS         xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPLESS         xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPUNORDSS      xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPNEQSS        xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPNLTSS        xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPNLESS        xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPORDSS        xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPEQ_UQSS      xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPNGESS        xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPNGTSS        xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPFALSESS      xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPNEQ_OQSS     xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPGESS         xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPGTSS         xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPTRUESS       xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPEQ_OSSS      xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPLT_OQSS      xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPLE_OQSS      xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPUNORD_SSS    xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPNEQ_USSS     xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPNLT_UQSS     xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPNLE_UQSS     xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPORD_SSS      xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPEQ_USSS      xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPNGE_UQSS     xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPNGT_UQSS     xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPFALSE_OSSS   xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPNEQ_OSSS     xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPGE_OQSS      xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPGT_OQSS      xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPTRUE_USSS    xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCMPSS           xmmreg,xmmreg*,xmmrm32,imm8 AVX,SANDYBRIDGE
\c VCOMISD          xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VCOMISS          xmmreg,xmmrm32           AVX,SANDYBRIDGE
\c VCVTDQ2PD        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VCVTDQ2PD        ymmreg,xmmrm128          AVX,SANDYBRIDGE
\c VCVTDQ2PS        xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VCVTDQ2PS        ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VCVTPD2DQ        xmmreg,xmmreg            AVX,SANDYBRIDGE
\c VCVTPD2DQ        xmmreg,mem128            AVX,SANDYBRIDGE,SO
\c VCVTPD2DQ        xmmreg,ymmreg            AVX,SANDYBRIDGE
\c VCVTPD2DQ        xmmreg,mem256            AVX,SANDYBRIDGE,SY
\c VCVTPD2PS        xmmreg,xmmreg            AVX,SANDYBRIDGE
\c VCVTPD2PS        xmmreg,mem128            AVX,SANDYBRIDGE,SO
\c VCVTPD2PS        xmmreg,ymmreg            AVX,SANDYBRIDGE
\c VCVTPD2PS        xmmreg,mem256            AVX,SANDYBRIDGE,SY
\c VCVTPS2DQ        xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VCVTPS2DQ        ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VCVTPS2PD        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VCVTPS2PD        ymmreg,xmmrm128          AVX,SANDYBRIDGE
\c VCVTSD2SI        reg32,xmmrm64            AVX,SANDYBRIDGE
\c VCVTSD2SI        reg64,xmmrm64            AVX,SANDYBRIDGE,LONG
\c VCVTSD2SS        xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VCVTSI2SD        xmmreg,xmmreg*,rm32      AVX,SANDYBRIDGE,SD
\c VCVTSI2SD        xmmreg,xmmreg*,mem32     AVX,SANDYBRIDGE,ND,SD
\c VCVTSI2SD        xmmreg,xmmreg*,rm64      AVX,SANDYBRIDGE,LONG
\c VCVTSI2SS        xmmreg,xmmreg*,rm32      AVX,SANDYBRIDGE,SD
\c VCVTSI2SS        xmmreg,xmmreg*,mem32     AVX,SANDYBRIDGE,ND,SD
\c VCVTSI2SS        xmmreg,xmmreg*,rm64      AVX,SANDYBRIDGE,LONG
\c VCVTSS2SD        xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VCVTSS2SI        reg32,xmmrm32            AVX,SANDYBRIDGE
\c VCVTSS2SI        reg64,xmmrm32            AVX,SANDYBRIDGE,LONG
\c VCVTTPD2DQ       xmmreg,xmmreg            AVX,SANDYBRIDGE
\c VCVTTPD2DQ       xmmreg,mem128            AVX,SANDYBRIDGE,SO
\c VCVTTPD2DQ       xmmreg,ymmreg            AVX,SANDYBRIDGE
\c VCVTTPD2DQ       xmmreg,mem256            AVX,SANDYBRIDGE,SY
\c VCVTTPS2DQ       xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VCVTTPS2DQ       ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VCVTTSD2SI       reg32,xmmrm64            AVX,SANDYBRIDGE
\c VCVTTSD2SI       reg64,xmmrm64            AVX,SANDYBRIDGE,LONG
\c VCVTTSS2SI       reg32,xmmrm32            AVX,SANDYBRIDGE
\c VCVTTSS2SI       reg64,xmmrm32            AVX,SANDYBRIDGE,LONG
\c VDIVPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VDIVPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VDIVPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VDIVPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VDIVSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VDIVSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VDPPD            xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VDPPS            xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VDPPS            ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VEXTRACTF128     xmmrm128,xmmreg,imm8     AVX,SANDYBRIDGE
\c VEXTRACTPS       rm32,xmmreg,imm8         AVX,SANDYBRIDGE
\c VHADDPD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VHADDPD          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VHADDPS          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VHADDPS          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VHSUBPD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VHSUBPD          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VHSUBPS          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VHSUBPS          ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VINSERTF128      ymmreg,ymmreg,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VINSERTPS        xmmreg,xmmreg*,xmmrm32,imm8 AVX,SANDYBRIDGE
\c VLDDQU           xmmreg,mem128            AVX,SANDYBRIDGE
\c VLDQQU           ymmreg,mem256            AVX,SANDYBRIDGE
\c VLDDQU           ymmreg,mem256            AVX,SANDYBRIDGE
\c VLDMXCSR         mem32                    AVX,SANDYBRIDGE
\c VMASKMOVDQU      xmmreg,xmmreg            AVX,SANDYBRIDGE
\c VMASKMOVPS       xmmreg,xmmreg,mem128     AVX,SANDYBRIDGE
\c VMASKMOVPS       ymmreg,ymmreg,mem256     AVX,SANDYBRIDGE
\c VMASKMOVPS       mem128,xmmreg,xmmreg     AVX,SANDYBRIDGE,SO
\c VMASKMOVPS       mem256,xmmreg,xmmreg     AVX,SANDYBRIDGE,SY
\c VMASKMOVPD       xmmreg,xmmreg,mem128     AVX,SANDYBRIDGE
\c VMASKMOVPD       ymmreg,ymmreg,mem256     AVX,SANDYBRIDGE
\c VMASKMOVPD       mem128,xmmreg,xmmreg     AVX,SANDYBRIDGE
\c VMASKMOVPD       mem256,ymmreg,ymmreg     AVX,SANDYBRIDGE
\c VMAXPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VMAXPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VMAXPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VMAXPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VMAXSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VMAXSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VMINPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VMINPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VMINPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VMINPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VMINSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VMINSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VMOVAPD          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVAPD          xmmrm128,xmmreg          AVX,SANDYBRIDGE
\c VMOVAPD          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVAPD          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMOVAPS          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVAPS          xmmrm128,xmmreg          AVX,SANDYBRIDGE
\c VMOVAPS          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVAPS          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMOVQ            xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VMOVQ            xmmrm64,xmmreg           AVX,SANDYBRIDGE
\c VMOVQ            xmmreg,rm64              AVX,SANDYBRIDGE,LONG
\c VMOVQ            rm64,xmmreg              AVX,SANDYBRIDGE,LONG
\c VMOVD            xmmreg,rm32              AVX,SANDYBRIDGE
\c VMOVD            rm32,xmmreg              AVX,SANDYBRIDGE
\c VMOVDDUP         xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VMOVDDUP         ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVDQA          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVDQA          xmmrm128,xmmreg          AVX,SANDYBRIDGE
\c VMOVQQA          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVQQA          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMOVDQA          ymmreg,ymmrm             AVX,SANDYBRIDGE
\c VMOVDQA          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMOVDQU          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVDQU          xmmrm128,xmmreg          AVX,SANDYBRIDGE
\c VMOVQQU          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVQQU          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMOVDQU          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVDQU          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMOVHLPS         xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE
\c VMOVHPD          xmmreg,xmmreg*,mem64     AVX,SANDYBRIDGE
\c VMOVHPD          mem64,xmmreg             AVX,SANDYBRIDGE
\c VMOVHPS          xmmreg,xmmreg*,mem64     AVX,SANDYBRIDGE
\c VMOVHPS          mem64,xmmreg             AVX,SANDYBRIDGE
\c VMOVLHPS         xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE
\c VMOVLPD          xmmreg,xmmreg*,mem64     AVX,SANDYBRIDGE
\c VMOVLPD          mem64,xmmreg             AVX,SANDYBRIDGE
\c VMOVLPS          xmmreg,xmmreg*,mem64     AVX,SANDYBRIDGE
\c VMOVLPS          mem64,xmmreg             AVX,SANDYBRIDGE
\c VMOVMSKPD        reg64,xmmreg             AVX,SANDYBRIDGE,LONG
\c VMOVMSKPD        reg32,xmmreg             AVX,SANDYBRIDGE
\c VMOVMSKPD        reg64,ymmreg             AVX,SANDYBRIDGE,LONG
\c VMOVMSKPD        reg32,ymmreg             AVX,SANDYBRIDGE
\c VMOVMSKPS        reg64,xmmreg             AVX,SANDYBRIDGE,LONG
\c VMOVMSKPS        reg32,xmmreg             AVX,SANDYBRIDGE
\c VMOVMSKPS        reg64,ymmreg             AVX,SANDYBRIDGE,LONG
\c VMOVMSKPS        reg32,ymmreg             AVX,SANDYBRIDGE
\c VMOVNTDQ         mem128,xmmreg            AVX,SANDYBRIDGE
\c VMOVNTQQ         mem256,ymmreg            AVX,SANDYBRIDGE
\c VMOVNTDQ         mem256,ymmreg            AVX,SANDYBRIDGE
\c VMOVNTDQA        xmmreg,mem128            AVX,SANDYBRIDGE
\c VMOVNTPD         mem128,xmmreg            AVX,SANDYBRIDGE
\c VMOVNTPD         mem256,ymmreg            AVX,SANDYBRIDGE
\c VMOVNTPS         mem128,xmmreg            AVX,SANDYBRIDGE
\c VMOVNTPS         mem128,ymmreg            AVX,SANDYBRIDGE
\c VMOVSD           xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE
\c VMOVSD           xmmreg,mem64             AVX,SANDYBRIDGE
\c VMOVSD           xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE
\c VMOVSD           mem64,xmmreg             AVX,SANDYBRIDGE
\c VMOVSHDUP        xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVSHDUP        ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVSLDUP        xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVSLDUP        ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVSS           xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE
\c VMOVSS           xmmreg,mem64             AVX,SANDYBRIDGE
\c VMOVSS           xmmreg,xmmreg*,xmmreg    AVX,SANDYBRIDGE
\c VMOVSS           mem64,xmmreg             AVX,SANDYBRIDGE
\c VMOVUPD          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVUPD          xmmrm128,xmmreg          AVX,SANDYBRIDGE
\c VMOVUPD          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVUPD          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMOVUPS          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VMOVUPS          xmmrm128,xmmreg          AVX,SANDYBRIDGE
\c VMOVUPS          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VMOVUPS          ymmrm256,ymmreg          AVX,SANDYBRIDGE
\c VMPSADBW         xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VMULPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VMULPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VMULPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VMULPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VMULSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VMULSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VORPD            xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VORPD            ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VORPS            xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VORPS            ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VPABSB           xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VPABSW           xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VPABSD           xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VPACKSSWB        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPACKSSDW        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPACKUSWB        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPACKUSDW        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDB           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDQ           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDSB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDSW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDUSB         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPADDUSW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPALIGNR         xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VPAND            xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPANDN           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPAVGB           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPAVGW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPBLENDVB        xmmreg,xmmreg*,xmmrm128,xmmreg AVX,SANDYBRIDGE
\c VPBLENDW         xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VPCMPESTRI       xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPCMPESTRM       xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPCMPISTRI       xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPCMPISTRM       xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPCMPEQB         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCMPEQW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCMPEQD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCMPEQQ         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCMPGTB         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCMPGTW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCMPGTD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCMPGTQ         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPERMILPD        xmmreg,xmmreg,xmmrm128   AVX,SANDYBRIDGE
\c VPERMILPD        ymmreg,ymmreg,ymmrm256   AVX,SANDYBRIDGE
\c VPERMILPD        xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPERMILPD        ymmreg,ymmrm256,imm8     AVX,SANDYBRIDGE
\c VPERMILTD2PD     xmmreg,xmmreg,xmmrm128,xmmreg AVX,SANDYBRIDGE
\c VPERMILTD2PD     xmmreg,xmmreg,xmmreg,xmmrm128 AVX,SANDYBRIDGE
\c VPERMILTD2PD     ymmreg,ymmreg,ymmrm256,ymmreg AVX,SANDYBRIDGE
\c VPERMILTD2PD     ymmreg,ymmreg,ymmreg,ymmrm256 AVX,SANDYBRIDGE
\c VPERMILMO2PD     xmmreg,xmmreg,xmmrm128,xmmreg AVX,SANDYBRIDGE
\c VPERMILMO2PD     xmmreg,xmmreg,xmmreg,xmmrm128 AVX,SANDYBRIDGE
\c VPERMILMO2PD     ymmreg,ymmreg,ymmrm256,ymmreg AVX,SANDYBRIDGE
\c VPERMILMO2PD     ymmreg,ymmreg,ymmreg,ymmrm256 AVX,SANDYBRIDGE
\c VPERMILMZ2PD     xmmreg,xmmreg,xmmrm128,xmmreg AVX,SANDYBRIDGE
\c VPERMILMZ2PD     xmmreg,xmmreg,xmmreg,xmmrm128 AVX,SANDYBRIDGE
\c VPERMILMZ2PD     ymmreg,ymmreg,ymmrm256,ymmreg AVX,SANDYBRIDGE
\c VPERMILMZ2PD     ymmreg,ymmreg,ymmreg,ymmrm256 AVX,SANDYBRIDGE
\c VPERMIL2PD       xmmreg,xmmreg,xmmrm128,xmmreg,imm8 AVX,SANDYBRIDGE
\c VPERMIL2PD       xmmreg,xmmreg,xmmreg,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VPERMIL2PD       ymmreg,ymmreg,ymmrm256,ymmreg,imm8 AVX,SANDYBRIDGE
\c VPERMIL2PD       ymmreg,ymmreg,ymmreg,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VPERMILPS        xmmreg,xmmreg,xmmrm128   AVX,SANDYBRIDGE
\c VPERMILPS        ymmreg,ymmreg,ymmrm256   AVX,SANDYBRIDGE
\c VPERMILPS        xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPERMILPS        ymmreg,ymmrm256,imm8     AVX,SANDYBRIDGE
\c VPERMILTD2PS     xmmreg,xmmreg,xmmrm128,xmmreg AVX,SANDYBRIDGE
\c VPERMILTD2PS     xmmreg,xmmreg,xmmreg,xmmrm128 AVX,SANDYBRIDGE
\c VPERMILTD2PS     ymmreg,ymmreg,ymmrm256,ymmreg AVX,SANDYBRIDGE
\c VPERMILTD2PS     ymmreg,ymmreg,ymmreg,ymmrm256 AVX,SANDYBRIDGE
\c VPERMILMO2PS     xmmreg,xmmreg,xmmrm128,xmmreg AVX,SANDYBRIDGE
\c VPERMILMO2PS     xmmreg,xmmreg,xmmreg,xmmrm128 AVX,SANDYBRIDGE
\c VPERMILMO2PS     ymmreg,ymmreg,ymmrm256,ymmreg AVX,SANDYBRIDGE
\c VPERMILMO2PS     ymmreg,ymmreg,ymmreg,ymmrm256 AVX,SANDYBRIDGE
\c VPERMILMZ2PS     xmmreg,xmmreg,xmmrm128,xmmreg AVX,SANDYBRIDGE
\c VPERMILMZ2PS     xmmreg,xmmreg,xmmreg,xmmrm128 AVX,SANDYBRIDGE
\c VPERMILMZ2PS     ymmreg,ymmreg,ymmrm256,ymmreg AVX,SANDYBRIDGE
\c VPERMILMZ2PS     ymmreg,ymmreg,ymmreg,ymmrm256 AVX,SANDYBRIDGE
\c VPERMIL2PS       xmmreg,xmmreg,xmmrm128,xmmreg,imm8 AVX,SANDYBRIDGE
\c VPERMIL2PS       xmmreg,xmmreg,xmmreg,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VPERMIL2PS       ymmreg,ymmreg,ymmrm256,ymmreg,imm8 AVX,SANDYBRIDGE
\c VPERMIL2PS       ymmreg,ymmreg,ymmreg,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VPERM2F128       ymmreg,ymmreg,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VPEXTRB          reg64,xmmreg,imm8        AVX,SANDYBRIDGE,LONG
\c VPEXTRB          reg32,xmmreg,imm8        AVX,SANDYBRIDGE
\c VPEXTRB          mem8,xmmreg,imm8         AVX,SANDYBRIDGE
\c VPEXTRW          reg64,xmmreg,imm8        AVX,SANDYBRIDGE,LONG
\c VPEXTRW          reg32,xmmreg,imm8        AVX,SANDYBRIDGE
\c VPEXTRW          mem16,xmmreg,imm8        AVX,SANDYBRIDGE
\c VPEXTRW          reg64,xmmreg,imm8        AVX,SANDYBRIDGE,LONG
\c VPEXTRW          reg32,xmmreg,imm8        AVX,SANDYBRIDGE
\c VPEXTRW          mem16,xmmreg,imm8        AVX,SANDYBRIDGE
\c VPEXTRD          reg64,xmmreg,imm8        AVX,SANDYBRIDGE,LONG
\c VPEXTRD          rm32,xmmreg,imm8         AVX,SANDYBRIDGE
\c VPEXTRQ          rm64,xmmreg,imm8         AVX,SANDYBRIDGE,LONG
\c VPHADDW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPHADDD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPHADDSW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPHMINPOSUW      xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VPHSUBW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPHSUBD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPHSUBSW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPINSRB          xmmreg,xmmreg*,mem8,imm8 AVX,SANDYBRIDGE
\c VPINSRB          xmmreg,xmmreg*,rm8,imm8  AVX,SANDYBRIDGE
\c VPINSRB          xmmreg,xmmreg*,reg32,imm8 AVX,SANDYBRIDGE
\c VPINSRW          xmmreg,xmmreg*,mem16,imm8 AVX,SANDYBRIDGE
\c VPINSRW          xmmreg,xmmreg*,rm16,imm8 AVX,SANDYBRIDGE
\c VPINSRW          xmmreg,xmmreg*,reg32,imm8 AVX,SANDYBRIDGE
\c VPINSRD          xmmreg,xmmreg*,mem32,imm8 AVX,SANDYBRIDGE
\c VPINSRD          xmmreg,xmmreg*,rm32,imm8 AVX,SANDYBRIDGE
\c VPINSRQ          xmmreg,xmmreg*,mem64,imm8 AVX,SANDYBRIDGE,LONG
\c VPINSRQ          xmmreg,xmmreg*,rm64,imm8 AVX,SANDYBRIDGE,LONG
\c VPMADDWD         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMADDUBSW       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMAXSB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMAXSW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMAXSD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMAXUB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMAXUW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMAXUD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMINSB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMINSW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMINSD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMINUB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMINUW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMINUD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMOVMSKB        reg64,xmmreg             AVX,SANDYBRIDGE,LONG
\c VPMOVMSKB        reg32,xmmreg             AVX,SANDYBRIDGE
\c VPMOVSXBW        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VPMOVSXBD        xmmreg,xmmrm32           AVX,SANDYBRIDGE
\c VPMOVSXBQ        xmmreg,xmmrm16           AVX,SANDYBRIDGE
\c VPMOVSXWD        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VPMOVSXWQ        xmmreg,xmmrm32           AVX,SANDYBRIDGE
\c VPMOVSXDQ        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VPMOVZXBW        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VPMOVZXBD        xmmreg,xmmrm32           AVX,SANDYBRIDGE
\c VPMOVZXBQ        xmmreg,xmmrm16           AVX,SANDYBRIDGE
\c VPMOVZXWD        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VPMOVZXWQ        xmmreg,xmmrm32           AVX,SANDYBRIDGE
\c VPMOVZXDQ        xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VPMULHUW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMULHRSW        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMULHW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMULLW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMULLD          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMULUDQ         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPMULDQ          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPOR             xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSADBW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSHUFB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSHUFD          xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPSHUFHW         xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPSHUFLW         xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VPSIGNB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSIGNW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSIGND          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSLLDQ          xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSRLDQ          xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSLLW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSLLW           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSLLD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSLLD           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSLLQ           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSLLQ           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSRAW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSRAW           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSRAD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSRAD           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSRLW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSRLW           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSRLD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSRLD           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPSRLQ           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSRLQ           xmmreg,xmmreg*,imm8      AVX,SANDYBRIDGE
\c VPTEST           xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VPTEST           ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VPSUBB           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSUBW           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSUBD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSUBQ           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSUBSB          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSUBSW          xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSUBUSB         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPSUBUSW         xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKHBW       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKHWD       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKHDQ       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKHQDQ      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKLBW       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKLWD       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKLDQ       xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPUNPCKLQDQ      xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPXOR            xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VRCPPS           xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VRCPPS           ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VRCPSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VRSQRTPS         xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VRSQRTPS         ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VRSQRTSS         xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VROUNDPD         xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VROUNDPD         ymmreg,ymmrm256,imm8     AVX,SANDYBRIDGE
\c VROUNDPS         xmmreg,xmmrm128,imm8     AVX,SANDYBRIDGE
\c VROUNDPS         ymmreg,ymmrm256,imm8     AVX,SANDYBRIDGE
\c VROUNDSD         xmmreg,xmmreg*,xmmrm64,imm8 AVX,SANDYBRIDGE
\c VROUNDSS         xmmreg,xmmreg*,xmmrm32,imm8 AVX,SANDYBRIDGE
\c VSHUFPD          xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VSHUFPD          ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VSHUFPS          xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE
\c VSHUFPS          ymmreg,ymmreg*,ymmrm256,imm8 AVX,SANDYBRIDGE
\c VSQRTPD          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VSQRTPD          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VSQRTPS          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VSQRTPS          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VSQRTSD          xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VSQRTSS          xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VSTMXCSR         mem32                    AVX,SANDYBRIDGE
\c VSUBPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VSUBPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VSUBPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VSUBPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VSUBSD           xmmreg,xmmreg*,xmmrm64   AVX,SANDYBRIDGE
\c VSUBSS           xmmreg,xmmreg*,xmmrm32   AVX,SANDYBRIDGE
\c VTESTPS          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VTESTPS          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VTESTPD          xmmreg,xmmrm128          AVX,SANDYBRIDGE
\c VTESTPD          ymmreg,ymmrm256          AVX,SANDYBRIDGE
\c VUCOMISD         xmmreg,xmmrm64           AVX,SANDYBRIDGE
\c VUCOMISS         xmmreg,xmmrm32           AVX,SANDYBRIDGE
\c VUNPCKHPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VUNPCKHPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VUNPCKHPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VUNPCKHPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VUNPCKLPD        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VUNPCKLPD        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VUNPCKLPS        xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VUNPCKLPS        ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VXORPD           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VXORPD           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VXORPS           xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VXORPS           ymmreg,ymmreg*,ymmrm256  AVX,SANDYBRIDGE
\c VZEROALL                                  AVX,SANDYBRIDGE
\c VZEROUPPER                                AVX,SANDYBRIDGE

\S{} Intel Carry-Less Multiplication instructions (CLMUL)

\c PCLMULLQLQDQ     xmmreg,xmmrm128          SSE,WESTMERE
\c PCLMULHQLQDQ     xmmreg,xmmrm128          SSE,WESTMERE
\c PCLMULLQHQDQ     xmmreg,xmmrm128          SSE,WESTMERE
\c PCLMULHQHQDQ     xmmreg,xmmrm128          SSE,WESTMERE
\c PCLMULQDQ        xmmreg,xmmrm128,imm8     SSE,WESTMERE

\S{} Intel AVX Carry-Less Multiplication instructions (CLMUL)

\c VPCLMULLQLQDQ    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCLMULHQLQDQ    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCLMULLQHQDQ    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCLMULHQHQDQ    xmmreg,xmmreg*,xmmrm128  AVX,SANDYBRIDGE
\c VPCLMULQDQ       xmmreg,xmmreg*,xmmrm128,imm8 AVX,SANDYBRIDGE

\S{} Intel Fused Multiply-Add instructions (FMA)

\c VFMADD132PS      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADD132PS      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADD132PD      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADD132PD      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADD312PS      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADD312PS      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADD312PD      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADD312PD      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADD213PS      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADD213PS      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADD213PD      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADD213PD      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADD123PS      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADD123PS      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADD123PD      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADD123PD      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADD231PS      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADD231PS      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADD231PD      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADD231PD      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADD321PS      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADD321PS      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADD321PD      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADD321PD      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADDSUB132PS   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADDSUB132PS   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADDSUB132PD   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADDSUB132PD   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADDSUB312PS   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADDSUB312PS   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADDSUB312PD   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADDSUB312PD   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADDSUB213PS   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADDSUB213PS   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADDSUB213PD   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADDSUB213PD   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADDSUB123PS   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADDSUB123PS   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADDSUB123PD   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADDSUB123PD   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADDSUB231PS   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADDSUB231PS   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADDSUB231PD   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADDSUB231PD   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADDSUB321PS   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADDSUB321PS   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADDSUB321PD   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMADDSUB321PD   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUB132PS      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUB132PS      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUB132PD      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUB132PD      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUB312PS      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUB312PS      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUB312PD      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUB312PD      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUB213PS      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUB213PS      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUB213PD      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUB213PD      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUB123PS      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUB123PS      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUB123PD      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUB123PD      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUB231PS      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUB231PS      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUB231PD      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUB231PD      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUB321PS      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUB321PS      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUB321PD      xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUB321PD      ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUBADD132PS   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUBADD132PS   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUBADD132PD   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUBADD132PD   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUBADD312PS   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUBADD312PS   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUBADD312PD   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUBADD312PD   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUBADD213PS   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUBADD213PS   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUBADD213PD   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUBADD213PD   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUBADD123PS   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUBADD123PS   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUBADD123PD   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUBADD123PD   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUBADD231PS   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUBADD231PS   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUBADD231PD   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUBADD231PD   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUBADD321PS   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUBADD321PS   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMSUBADD321PD   xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFMSUBADD321PD   ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMADD132PS     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMADD132PS     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMADD132PD     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMADD132PD     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMADD312PS     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMADD312PS     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMADD312PD     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMADD312PD     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMADD213PS     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMADD213PS     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMADD213PD     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMADD213PD     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMADD123PS     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMADD123PS     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMADD123PD     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMADD123PD     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMADD231PS     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMADD231PS     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMADD231PD     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMADD231PD     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMADD321PS     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMADD321PS     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMADD321PD     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMADD321PD     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMSUB132PS     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMSUB132PS     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMSUB132PD     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMSUB132PD     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMSUB312PS     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMSUB312PS     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMSUB312PD     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMSUB312PD     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMSUB213PS     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMSUB213PS     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMSUB213PD     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMSUB213PD     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMSUB123PS     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMSUB123PS     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMSUB123PD     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMSUB123PD     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMSUB231PS     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMSUB231PS     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMSUB231PD     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMSUB231PD     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMSUB321PS     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMSUB321PS     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFNMSUB321PD     xmmreg,xmmreg,xmmrm128   FMA,FUTURE
\c VFNMSUB321PD     ymmreg,ymmreg,ymmrm256   FMA,FUTURE
\c VFMADD132SS      xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFMADD132SD      xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFMADD312SS      xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFMADD312SD      xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFMADD213SS      xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFMADD213SD      xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFMADD123SS      xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFMADD123SD      xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFMADD231SS      xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFMADD231SD      xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFMADD321SS      xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFMADD321SD      xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFMSUB132SS      xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFMSUB132SD      xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFMSUB312SS      xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFMSUB312SD      xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFMSUB213SS      xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFMSUB213SD      xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFMSUB123SS      xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFMSUB123SD      xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFMSUB231SS      xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFMSUB231SD      xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFMSUB321SS      xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFMSUB321SD      xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFNMADD132SS     xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFNMADD132SD     xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFNMADD312SS     xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFNMADD312SD     xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFNMADD213SS     xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFNMADD213SD     xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFNMADD123SS     xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFNMADD123SD     xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFNMADD231SS     xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFNMADD231SD     xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFNMADD321SS     xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFNMADD321SD     xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFNMSUB132SS     xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFNMSUB132SD     xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFNMSUB312SS     xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFNMSUB312SD     xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFNMSUB213SS     xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFNMSUB213SD     xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFNMSUB123SS     xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFNMSUB123SD     xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFNMSUB231SS     xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFNMSUB231SD     xmmreg,xmmreg,xmmrm64    FMA,FUTURE
\c VFNMSUB321SS     xmmreg,xmmreg,xmmrm32    FMA,FUTURE
\c VFNMSUB321SD     xmmreg,xmmreg,xmmrm64    FMA,FUTURE

\S{} VIA (Centaur) security instructions

\c XSTORE                                    PENT,CYRIX
\c XCRYPTECB                                 PENT,CYRIX
\c XCRYPTCBC                                 PENT,CYRIX
\c XCRYPTCTR                                 PENT,CYRIX
\c XCRYPTCFB                                 PENT,CYRIX
\c XCRYPTOFB                                 PENT,CYRIX
\c MONTMUL                                   PENT,CYRIX
\c XSHA1                                     PENT,CYRIX
\c XSHA256                                   PENT,CYRIX

\S{} AMD Lightweight Profiling (LWP) instructions

\c LLWPCB           reg16                    AMD
\c LLWPCB           reg32                    AMD,386
\c LLWPCB           reg64                    AMD,X64
\c SLWPCB           reg16                    AMD
\c SLWPCB           reg32                    AMD,386
\c SLWPCB           reg64                    AMD,X64
\c LWPVAL           reg16,rm32,imm16         AMD,386
\c LWPVAL           reg32,rm32,imm32         AMD,386
\c LWPVAL           reg64,rm32,imm32         AMD,X64
\c LWPINS           reg16,rm32,imm16         AMD,386
\c LWPINS           reg32,rm32,imm32         AMD,386
\c LWPINS           reg64,rm32,imm32         AMD,X64

\S{} AMD XOP, FMA4 and CVT16 instructions (SSE5)

\c VCVTPH2PS        xmmreg,xmmrm64*,imm8     AMD,SSE5
\c VCVTPH2PS        ymmreg,xmmrm128,imm8     AMD,SSE5
\c VCVTPH2PS        ymmreg,ymmrm128*,imm8    AMD,SSE5
\c VCVTPS2PH        xmmrm64,xmmreg*,imm8     AMD,SSE5
\c VCVTPS2PH        xmmrm128,ymmreg,imm8     AMD,SSE5
\c VCVTPS2PH        ymmrm128,ymmreg*,imm8    AMD,SSE5
\c VFMADDPD         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMADDPD         ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMADDPD         xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMADDPD         ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMADDPS         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMADDPS         ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMADDPS         xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMADDPS         ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMADDSD         xmmreg,xmmreg*,xmmrm64,xmmreg AMD,SSE5
\c VFMADDSD         xmmreg,xmmreg*,xmmreg,xmmrm64 AMD,SSE5
\c VFMADDSS         xmmreg,xmmreg*,xmmrm32,xmmreg AMD,SSE5
\c VFMADDSS         xmmreg,xmmreg*,xmmreg,xmmrm32 AMD,SSE5
\c VFMADDSUBPD      xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMADDSUBPD      ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMADDSUBPD      xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMADDSUBPD      ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMADDSUBPS      xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMADDSUBPS      ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMADDSUBPS      xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMADDSUBPS      ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMSUBADDPD      xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMSUBADDPD      ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMSUBADDPD      xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMSUBADDPD      ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMSUBADDPS      xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMSUBADDPS      ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMSUBADDPS      xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMSUBADDPS      ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMSUBPD         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMSUBPD         ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMSUBPD         xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMSUBPD         ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMSUBPS         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFMSUBPS         ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFMSUBPS         xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFMSUBPS         ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFMSUBSD         xmmreg,xmmreg*,xmmrm64,xmmreg AMD,SSE5
\c VFMSUBSD         xmmreg,xmmreg*,xmmreg,xmmrm64 AMD,SSE5
\c VFMSUBSS         xmmreg,xmmreg*,xmmrm32,xmmreg AMD,SSE5
\c VFMSUBSS         xmmreg,xmmreg*,xmmreg,xmmrm32 AMD,SSE5
\c VFNMADDPD        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFNMADDPD        ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFNMADDPD        xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFNMADDPD        ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFNMADDPS        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFNMADDPS        ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFNMADDPS        xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFNMADDPS        ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFNMADDSD        xmmreg,xmmreg*,xmmrm64,xmmreg AMD,SSE5
\c VFNMADDSD        xmmreg,xmmreg*,xmmreg,xmmrm64 AMD,SSE5
\c VFNMADDSS        xmmreg,xmmreg*,xmmrm32,xmmreg AMD,SSE5
\c VFNMADDSS        xmmreg,xmmreg*,xmmreg,xmmrm32 AMD,SSE5
\c VFNMSUBPD        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFNMSUBPD        ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFNMSUBPD        xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFNMSUBPD        ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFNMSUBPS        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VFNMSUBPS        ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VFNMSUBPS        xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VFNMSUBPS        ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VFNMSUBSD        xmmreg,xmmreg*,xmmrm64,xmmreg AMD,SSE5
\c VFNMSUBSD        xmmreg,xmmreg*,xmmreg,xmmrm64 AMD,SSE5
\c VFNMSUBSS        xmmreg,xmmreg*,xmmrm32,xmmreg AMD,SSE5
\c VFNMSUBSS        xmmreg,xmmreg*,xmmreg,xmmrm32 AMD,SSE5
\c VFRCZPD          xmmreg,xmmrm128*         AMD,SSE5
\c VFRCZPD          ymmreg,ymmrm256*         AMD,SSE5
\c VFRCZPS          xmmreg,xmmrm128*         AMD,SSE5
\c VFRCZPS          ymmreg,ymmrm256*         AMD,SSE5
\c VFRCZSD          xmmreg,xmmrm64*          AMD,SSE5
\c VFRCZSS          xmmreg,xmmrm32*          AMD,SSE5
\c VPCMOV           xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPCMOV           ymmreg,ymmreg*,ymmrm256,ymmreg AMD,SSE5
\c VPCMOV           xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VPCMOV           ymmreg,ymmreg*,ymmreg,ymmrm256 AMD,SSE5
\c VPCOMB           xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPCOMD           xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPCOMQ           xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPCOMUB          xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPCOMUD          xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPCOMUQ          xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPCOMUW          xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPCOMW           xmmreg,xmmreg*,xmmrm128,imm8 AMD,SSE5
\c VPHADDBD         xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDBQ         xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDBW         xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDDQ         xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDUBD        xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDUBQ        xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDUBW        xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDUDQ        xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDUWD        xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDUWQ        xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDWD         xmmreg,xmmrm128*         AMD,SSE5
\c VPHADDWQ         xmmreg,xmmrm128*         AMD,SSE5
\c VPHSUBBW         xmmreg,xmmrm128*         AMD,SSE5
\c VPHSUBDQ         xmmreg,xmmrm128*         AMD,SSE5
\c VPHSUBWD         xmmreg,xmmrm128*         AMD,SSE5
\c VPMACSDD         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSDQH        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSDQL        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSSDD        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSSDQH       xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSSDQL       xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSSWD        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSSWW        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSWD         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMACSWW         xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMADCSSWD       xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPMADCSWD        xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPPERM           xmmreg,xmmreg*,xmmreg,xmmrm128 AMD,SSE5
\c VPPERM           xmmreg,xmmreg*,xmmrm128,xmmreg AMD,SSE5
\c VPROTB           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPROTB           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPROTB           xmmreg,xmmrm128*,imm8    AMD,SSE5
\c VPROTD           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPROTD           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPROTD           xmmreg,xmmrm128*,imm8    AMD,SSE5
\c VPROTQ           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPROTQ           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPROTQ           xmmreg,xmmrm128*,imm8    AMD,SSE5
\c VPROTW           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPROTW           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPROTW           xmmreg,xmmrm128*,imm8    AMD,SSE5
\c VPSHAB           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHAB           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPSHAD           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHAD           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPSHAQ           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHAQ           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPSHAW           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHAW           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPSHLB           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHLB           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPSHLD           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHLD           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPSHLQ           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHLQ           xmmreg,xmmreg*,xmmrm128  AMD,SSE5
\c VPSHLW           xmmreg,xmmrm128*,xmmreg  AMD,SSE5
\c VPSHLW           xmmreg,xmmreg*,xmmrm128  AMD,SSE5

\S{} Systematic names for the hinting nop instructions

\c HINT_NOP0        rm16                     P6,UNDOC
\c HINT_NOP0        rm32                     P6,UNDOC
\c HINT_NOP0        rm64                     X64,UNDOC
\c HINT_NOP1        rm16                     P6,UNDOC
\c HINT_NOP1        rm32                     P6,UNDOC
\c HINT_NOP1        rm64                     X64,UNDOC
\c HINT_NOP2        rm16                     P6,UNDOC
\c HINT_NOP2        rm32                     P6,UNDOC
\c HINT_NOP2        rm64                     X64,UNDOC
\c HINT_NOP3        rm16                     P6,UNDOC
\c HINT_NOP3        rm32                     P6,UNDOC
\c HINT_NOP3        rm64                     X64,UNDOC
\c HINT_NOP4        rm16                     P6,UNDOC
\c HINT_NOP4        rm32                     P6,UNDOC
\c HINT_NOP4        rm64                     X64,UNDOC
\c HINT_NOP5        rm16                     P6,UNDOC
\c HINT_NOP5        rm32                     P6,UNDOC
\c HINT_NOP5        rm64                     X64,UNDOC
\c HINT_NOP6        rm16                     P6,UNDOC
\c HINT_NOP6        rm32                     P6,UNDOC
\c HINT_NOP6        rm64                     X64,UNDOC
\c HINT_NOP7        rm16                     P6,UNDOC
\c HINT_NOP7        rm32                     P6,UNDOC
\c HINT_NOP7        rm64                     X64,UNDOC
\c HINT_NOP8        rm16                     P6,UNDOC
\c HINT_NOP8        rm32                     P6,UNDOC
\c HINT_NOP8        rm64                     X64,UNDOC
\c HINT_NOP9        rm16                     P6,UNDOC
\c HINT_NOP9        rm32                     P6,UNDOC
\c HINT_NOP9        rm64                     X64,UNDOC
\c HINT_NOP10       rm16                     P6,UNDOC
\c HINT_NOP10       rm32                     P6,UNDOC
\c HINT_NOP10       rm64                     X64,UNDOC
\c HINT_NOP11       rm16                     P6,UNDOC
\c HINT_NOP11       rm32                     P6,UNDOC
\c HINT_NOP11       rm64                     X64,UNDOC
\c HINT_NOP12       rm16                     P6,UNDOC
\c HINT_NOP12       rm32                     P6,UNDOC
\c HINT_NOP12       rm64                     X64,UNDOC
\c HINT_NOP13       rm16                     P6,UNDOC
\c HINT_NOP13       rm32                     P6,UNDOC
\c HINT_NOP13       rm64                     X64,UNDOC
\c HINT_NOP14       rm16                     P6,UNDOC
\c HINT_NOP14       rm32                     P6,UNDOC
\c HINT_NOP14       rm64                     X64,UNDOC
\c HINT_NOP15       rm16                     P6,UNDOC
\c HINT_NOP15       rm32                     P6,UNDOC
\c HINT_NOP15       rm64                     X64,UNDOC
\c HINT_NOP16       rm16                     P6,UNDOC
\c HINT_NOP16       rm32                     P6,UNDOC
\c HINT_NOP16       rm64                     X64,UNDOC
\c HINT_NOP17       rm16                     P6,UNDOC
\c HINT_NOP17       rm32                     P6,UNDOC
\c HINT_NOP17       rm64                     X64,UNDOC
\c HINT_NOP18       rm16                     P6,UNDOC
\c HINT_NOP18       rm32                     P6,UNDOC
\c HINT_NOP18       rm64                     X64,UNDOC
\c HINT_NOP19       rm16                     P6,UNDOC
\c HINT_NOP19       rm32                     P6,UNDOC
\c HINT_NOP19       rm64                     X64,UNDOC
\c HINT_NOP20       rm16                     P6,UNDOC
\c HINT_NOP20       rm32                     P6,UNDOC
\c HINT_NOP20       rm64                     X64,UNDOC
\c HINT_NOP21       rm16                     P6,UNDOC
\c HINT_NOP21       rm32                     P6,UNDOC
\c HINT_NOP21       rm64                     X64,UNDOC
\c HINT_NOP22       rm16                     P6,UNDOC
\c HINT_NOP22       rm32                     P6,UNDOC
\c HINT_NOP22       rm64                     X64,UNDOC
\c HINT_NOP23       rm16                     P6,UNDOC
\c HINT_NOP23       rm32                     P6,UNDOC
\c HINT_NOP23       rm64                     X64,UNDOC
\c HINT_NOP24       rm16                     P6,UNDOC
\c HINT_NOP24       rm32                     P6,UNDOC
\c HINT_NOP24       rm64                     X64,UNDOC
\c HINT_NOP25       rm16                     P6,UNDOC
\c HINT_NOP25       rm32                     P6,UNDOC
\c HINT_NOP25       rm64                     X64,UNDOC
\c HINT_NOP26       rm16                     P6,UNDOC
\c HINT_NOP26       rm32                     P6,UNDOC
\c HINT_NOP26       rm64                     X64,UNDOC
\c HINT_NOP27       rm16                     P6,UNDOC
\c HINT_NOP27       rm32                     P6,UNDOC
\c HINT_NOP27       rm64                     X64,UNDOC
\c HINT_NOP28       rm16                     P6,UNDOC
\c HINT_NOP28       rm32                     P6,UNDOC
\c HINT_NOP28       rm64                     X64,UNDOC
\c HINT_NOP29       rm16                     P6,UNDOC
\c HINT_NOP29       rm32                     P6,UNDOC
\c HINT_NOP29       rm64                     X64,UNDOC
\c HINT_NOP30       rm16                     P6,UNDOC
\c HINT_NOP30       rm32                     P6,UNDOC
\c HINT_NOP30       rm64                     X64,UNDOC
\c HINT_NOP31       rm16                     P6,UNDOC
\c HINT_NOP31       rm32                     P6,UNDOC
\c HINT_NOP31       rm64                     X64,UNDOC
\c HINT_NOP32       rm16                     P6,UNDOC
\c HINT_NOP32       rm32                     P6,UNDOC
\c HINT_NOP32       rm64                     X64,UNDOC
\c HINT_NOP33       rm16                     P6,UNDOC
\c HINT_NOP33       rm32                     P6,UNDOC
\c HINT_NOP33       rm64                     X64,UNDOC
\c HINT_NOP34       rm16                     P6,UNDOC
\c HINT_NOP34       rm32                     P6,UNDOC
\c HINT_NOP34       rm64                     X64,UNDOC
\c HINT_NOP35       rm16                     P6,UNDOC
\c HINT_NOP35       rm32                     P6,UNDOC
\c HINT_NOP35       rm64                     X64,UNDOC
\c HINT_NOP36       rm16                     P6,UNDOC
\c HINT_NOP36       rm32                     P6,UNDOC
\c HINT_NOP36       rm64                     X64,UNDOC
\c HINT_NOP37       rm16                     P6,UNDOC
\c HINT_NOP37       rm32                     P6,UNDOC
\c HINT_NOP37       rm64                     X64,UNDOC
\c HINT_NOP38       rm16                     P6,UNDOC
\c HINT_NOP38       rm32                     P6,UNDOC
\c HINT_NOP38       rm64                     X64,UNDOC
\c HINT_NOP39       rm16                     P6,UNDOC
\c HINT_NOP39       rm32                     P6,UNDOC
\c HINT_NOP39       rm64                     X64,UNDOC
\c HINT_NOP40       rm16                     P6,UNDOC
\c HINT_NOP40       rm32                     P6,UNDOC
\c HINT_NOP40       rm64                     X64,UNDOC
\c HINT_NOP41       rm16                     P6,UNDOC
\c HINT_NOP41       rm32                     P6,UNDOC
\c HINT_NOP41       rm64                     X64,UNDOC
\c HINT_NOP42       rm16                     P6,UNDOC
\c HINT_NOP42       rm32                     P6,UNDOC
\c HINT_NOP42       rm64                     X64,UNDOC
\c HINT_NOP43       rm16                     P6,UNDOC
\c HINT_NOP43       rm32                     P6,UNDOC
\c HINT_NOP43       rm64                     X64,UNDOC
\c HINT_NOP44       rm16                     P6,UNDOC
\c HINT_NOP44       rm32                     P6,UNDOC
\c HINT_NOP44       rm64                     X64,UNDOC
\c HINT_NOP45       rm16                     P6,UNDOC
\c HINT_NOP45       rm32                     P6,UNDOC
\c HINT_NOP45       rm64                     X64,UNDOC
\c HINT_NOP46       rm16                     P6,UNDOC
\c HINT_NOP46       rm32                     P6,UNDOC
\c HINT_NOP46       rm64                     X64,UNDOC
\c HINT_NOP47       rm16                     P6,UNDOC
\c HINT_NOP47       rm32                     P6,UNDOC
\c HINT_NOP47       rm64                     X64,UNDOC
\c HINT_NOP48       rm16                     P6,UNDOC
\c HINT_NOP48       rm32                     P6,UNDOC
\c HINT_NOP48       rm64                     X64,UNDOC
\c HINT_NOP49       rm16                     P6,UNDOC
\c HINT_NOP49       rm32                     P6,UNDOC
\c HINT_NOP49       rm64                     X64,UNDOC
\c HINT_NOP50       rm16                     P6,UNDOC
\c HINT_NOP50       rm32                     P6,UNDOC
\c HINT_NOP50       rm64                     X64,UNDOC
\c HINT_NOP51       rm16                     P6,UNDOC
\c HINT_NOP51       rm32                     P6,UNDOC
\c HINT_NOP51       rm64                     X64,UNDOC
\c HINT_NOP52       rm16                     P6,UNDOC
\c HINT_NOP52       rm32                     P6,UNDOC
\c HINT_NOP52       rm64                     X64,UNDOC
\c HINT_NOP53       rm16                     P6,UNDOC
\c HINT_NOP53       rm32                     P6,UNDOC
\c HINT_NOP53       rm64                     X64,UNDOC
\c HINT_NOP54       rm16                     P6,UNDOC
\c HINT_NOP54       rm32                     P6,UNDOC
\c HINT_NOP54       rm64                     X64,UNDOC
\c HINT_NOP55       rm16                     P6,UNDOC
\c HINT_NOP55       rm32                     P6,UNDOC
\c HINT_NOP55       rm64                     X64,UNDOC
\c HINT_NOP56       rm16                     P6,UNDOC
\c HINT_NOP56       rm32                     P6,UNDOC
\c HINT_NOP56       rm64                     X64,UNDOC
\c HINT_NOP57       rm16                     P6,UNDOC
\c HINT_NOP57       rm32                     P6,UNDOC
\c HINT_NOP57       rm64                     X64,UNDOC
\c HINT_NOP58       rm16                     P6,UNDOC
\c HINT_NOP58       rm32                     P6,UNDOC
\c HINT_NOP58       rm64                     X64,UNDOC
\c HINT_NOP59       rm16                     P6,UNDOC
\c HINT_NOP59       rm32                     P6,UNDOC
\c HINT_NOP59       rm64                     X64,UNDOC
\c HINT_NOP60       rm16                     P6,UNDOC
\c HINT_NOP60       rm32                     P6,UNDOC
\c HINT_NOP60       rm64                     X64,UNDOC
\c HINT_NOP61       rm16                     P6,UNDOC
\c HINT_NOP61       rm32                     P6,UNDOC
\c HINT_NOP61       rm64                     X64,UNDOC
\c HINT_NOP62       rm16                     P6,UNDOC
\c HINT_NOP62       rm32                     P6,UNDOC
\c HINT_NOP62       rm64                     X64,UNDOC
\c HINT_NOP63       rm16                     P6,UNDOC
\c HINT_NOP63       rm32                     P6,UNDOC
\c HINT_NOP63       rm64                     X64,UNDOC

